{"mappings":"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","sources":["<anon>","feedbackExample/main.ts","node_modules/stats.js/build/stats.min.js"],"sourcesContent":["(function () {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $6MzNI = parcelRequire(\"6MzNI\");\nvar $a759912a70d9e191$exports = {};\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    $a759912a70d9e191$exports = e();\n})($a759912a70d9e191$exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n\n// stats();\nvar $d3d97b6e45377a39$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($a759912a70d9e191$exports)))();\n$d3d97b6e45377a39$var$stats.showPanel(0);\ndocument.body.appendChild($d3d97b6e45377a39$var$stats.dom);\nconst $d3d97b6e45377a39$var$updatePositionVS = `#version 300 es\r\nin vec2 oldPosition;\r\nin vec2 velocity;\r\n\r\nuniform float deltaTime;\r\nuniform vec2 canvasDimensions;\r\n\r\nout vec2 newPosition;\r\n\r\nvec2 euclideanModulo(vec2 n, vec2 m) {\r\n    return mod(mod(n, m) + m, m);\r\n}\r\n\r\nvoid main() {\r\n  newPosition = euclideanModulo(\r\n      oldPosition + velocity * deltaTime,\r\n      canvasDimensions);\r\n}\r\n`;\nconst $d3d97b6e45377a39$var$updatePositionFS = `#version 300 es\r\nprecision highp float;\r\nvoid main() {\r\n}\r\n`;\nconst $d3d97b6e45377a39$var$drawParticlesVS = `#version 300 es\r\nin vec4 position;\r\nuniform mat4 matrix;\r\n\r\nvoid main() {\r\n  // do the common matrix math\r\n  gl_Position = matrix * position;\r\n  gl_PointSize = 10.0;\r\n}\r\n`;\nconst $d3d97b6e45377a39$var$drawParticlesFS = `#version 300 es\r\nprecision highp float;\r\nout vec4 outColor;\r\nvoid main() {\r\n  outColor = vec4(1, 0, 0, 1);\r\n}\r\n`;\n// Get A WebGL context\n/** @type {HTMLCanvasElement} */ const $d3d97b6e45377a39$var$canvas = document.querySelector(\"#c\");\nconst $d3d97b6e45377a39$var$gl = $d3d97b6e45377a39$var$canvas.getContext(\"webgl2\");\nif (!$d3d97b6e45377a39$var$gl) throw new Error(\"no webgl2\");\nconst $d3d97b6e45377a39$var$updatePositionProgInfo = $6MzNI.createProgramInfo($d3d97b6e45377a39$var$gl, [\n    $d3d97b6e45377a39$var$updatePositionVS,\n    $d3d97b6e45377a39$var$updatePositionFS\n], {\n    transformFeedbackVaryings: [\n        \"newPosition\"\n    ],\n    transformFeedbackMode: $d3d97b6e45377a39$var$gl.SEPARATE_ATTRIBS\n});\nconst $d3d97b6e45377a39$var$drawParticlesProgInfo = $6MzNI.createProgramInfo($d3d97b6e45377a39$var$gl, [\n    $d3d97b6e45377a39$var$drawParticlesVS,\n    $d3d97b6e45377a39$var$drawParticlesFS\n]);\n// we're going to base the initial positions on the size\n// of the canvas so lets update the size of the canvas\n// to the initial size we want\n$6MzNI.resizeCanvasToDisplaySize($d3d97b6e45377a39$var$gl.canvas);\n$d3d97b6e45377a39$var$gl.viewport(0, 0, $d3d97b6e45377a39$var$gl.canvas.width, $d3d97b6e45377a39$var$gl.canvas.height);\n// create random positions and velocities.\nconst $d3d97b6e45377a39$var$rand = (min, max)=>{\n    if (max === undefined) {\n        max = min;\n        min = 0;\n    }\n    return Math.random() * (max - min) + min;\n};\nconst $d3d97b6e45377a39$var$numParticles = 200;\nconst $d3d97b6e45377a39$var$createPoints = (num, ranges)=>new Array(num).fill(0).map((_)=>ranges.map((range)=>$d3d97b6e45377a39$var$rand(...range))).flat();\nconst $d3d97b6e45377a39$var$positions = new Float32Array($d3d97b6e45377a39$var$createPoints($d3d97b6e45377a39$var$numParticles, [\n    [\n        $d3d97b6e45377a39$var$canvas.width\n    ],\n    [\n        $d3d97b6e45377a39$var$canvas.height\n    ]\n]));\nconst $d3d97b6e45377a39$var$velocities = new Float32Array($d3d97b6e45377a39$var$createPoints($d3d97b6e45377a39$var$numParticles, [\n    [\n        -300,\n        300\n    ],\n    [\n        -300,\n        300\n    ]\n]));\nconst $d3d97b6e45377a39$var$position1Buffer = $6MzNI.createBufferFromTypedArray($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$positions, $d3d97b6e45377a39$var$gl.ARRAY_BUFFER, $d3d97b6e45377a39$var$gl.DYNAMIC_DRAW);\nconst $d3d97b6e45377a39$var$position2Buffer = $6MzNI.createBufferFromTypedArray($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$positions, $d3d97b6e45377a39$var$gl.ARRAY_BUFFER, $d3d97b6e45377a39$var$gl.DYNAMIC_DRAW);\nconst $d3d97b6e45377a39$var$velocityBuffer = $6MzNI.createBufferFromTypedArray($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$velocities, $d3d97b6e45377a39$var$gl.ARRAY_BUFFER, $d3d97b6e45377a39$var$gl.STATIC_DRAW);\nconst $d3d97b6e45377a39$var$updatePositionBI1to2 = $6MzNI.createBufferInfoFromArrays($d3d97b6e45377a39$var$gl, {\n    oldPosition: {\n        buffer: $d3d97b6e45377a39$var$position1Buffer,\n        numComponents: 2,\n        type: Float32Array\n    },\n    velocity: {\n        buffer: $d3d97b6e45377a39$var$velocityBuffer,\n        numComponents: 2,\n        type: Float32Array\n    },\n    newPosition: {\n        buffer: $d3d97b6e45377a39$var$position2Buffer,\n        numComponents: 2,\n        type: Float32Array\n    }\n});\nconst $d3d97b6e45377a39$var$updatePositionVAI1to2 = $6MzNI.createVertexArrayInfo($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$updatePositionProgInfo, $d3d97b6e45377a39$var$updatePositionBI1to2);\nconst $d3d97b6e45377a39$var$updatePositionBI2to1 = $6MzNI.createBufferInfoFromArrays($d3d97b6e45377a39$var$gl, {\n    oldPosition: {\n        buffer: $d3d97b6e45377a39$var$position2Buffer,\n        numComponents: 2,\n        type: Float32Array\n    },\n    velocity: {\n        buffer: $d3d97b6e45377a39$var$velocityBuffer,\n        numComponents: 2,\n        type: Float32Array\n    },\n    newPosition: {\n        buffer: $d3d97b6e45377a39$var$position1Buffer,\n        numComponents: 2,\n        type: Float32Array\n    }\n});\nconst $d3d97b6e45377a39$var$updatePositionVAI2to1 = $6MzNI.createVertexArrayInfo($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$updatePositionProgInfo, $d3d97b6e45377a39$var$updatePositionBI2to1);\nconst $d3d97b6e45377a39$var$drawVAI1 = $6MzNI.createVertexArrayInfo($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$drawParticlesProgInfo, $6MzNI.createBufferInfoFromArrays($d3d97b6e45377a39$var$gl, {\n    position: {\n        buffer: $d3d97b6e45377a39$var$position1Buffer,\n        numComponents: 2,\n        type: Float32Array\n    }\n}));\nconst $d3d97b6e45377a39$var$drawVAI2 = $6MzNI.createVertexArrayInfo($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$drawParticlesProgInfo, $6MzNI.createBufferInfoFromArrays($d3d97b6e45377a39$var$gl, {\n    position: {\n        buffer: $d3d97b6e45377a39$var$position2Buffer,\n        numComponents: 2,\n        type: Float32Array\n    }\n}));\n// const tf1 = gl.createTransformFeedback();\n// gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf1);\n// gl.useProgram(updatePositionProgInfo.program);\n// gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, \n//     updatePositionProgInfo.transformFeedbackInfo!.newPosition.index,\n//     updatePositionBI2.attribs!.newPosition.buffer\n// );\nconst $d3d97b6e45377a39$var$tf2to1 = $6MzNI.createTransformFeedback($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$updatePositionProgInfo, $d3d97b6e45377a39$var$updatePositionBI2to1);\nconst $d3d97b6e45377a39$var$tf1to2 = $6MzNI.createTransformFeedback($d3d97b6e45377a39$var$gl, $d3d97b6e45377a39$var$updatePositionProgInfo, $d3d97b6e45377a39$var$updatePositionBI1to2);\n// unbind left over stuff\n$d3d97b6e45377a39$var$gl.bindBuffer($d3d97b6e45377a39$var$gl.ARRAY_BUFFER, null);\nlet $d3d97b6e45377a39$var$current = {\n    // updateBI: updatePositionBI1to2,\n    updateVAI: $d3d97b6e45377a39$var$updatePositionVAI1to2,\n    tf: $d3d97b6e45377a39$var$tf1to2,\n    drawVAI: $d3d97b6e45377a39$var$drawVAI2\n};\nlet $d3d97b6e45377a39$var$next = {\n    // updateBI: updatePositionBI2to1,\n    updateVAI: $d3d97b6e45377a39$var$updatePositionVAI2to1,\n    tf: $d3d97b6e45377a39$var$tf2to1,\n    drawVAI: $d3d97b6e45377a39$var$drawVAI1\n};\nlet $d3d97b6e45377a39$var$then = 0;\nfunction $d3d97b6e45377a39$var$render(time) {\n    $d3d97b6e45377a39$var$stats.update();\n    // convert to seconds\n    time *= 0.001;\n    // Subtract the previous time from the current time\n    const deltaTime = time - $d3d97b6e45377a39$var$then;\n    // Remember the current time for the next frame.\n    $d3d97b6e45377a39$var$then = time;\n    if ($6MzNI.resizeCanvasToDisplaySize($d3d97b6e45377a39$var$gl.canvas)) $d3d97b6e45377a39$var$gl.viewport(0, 0, $d3d97b6e45377a39$var$gl.canvas.width, $d3d97b6e45377a39$var$gl.canvas.height);\n    $d3d97b6e45377a39$var$gl.clear($d3d97b6e45377a39$var$gl.COLOR_BUFFER_BIT);\n    // compute the new positions\n    $d3d97b6e45377a39$var$gl.useProgram($d3d97b6e45377a39$var$updatePositionProgInfo.program);\n    $d3d97b6e45377a39$var$gl.bindVertexArray($d3d97b6e45377a39$var$current.updateVAI.vertexArrayObject);\n    /*\r\n    Same as bindVertexArray, if we had no vertex array:\r\n    twgl.setBuffersAndAttributes(gl, updatePositionProgInfo, current.updateBI);\r\n    */ $6MzNI.setUniformsAndBindTextures($d3d97b6e45377a39$var$updatePositionProgInfo, {\n        canvasDimensions: [\n            $d3d97b6e45377a39$var$gl.canvas.width,\n            $d3d97b6e45377a39$var$gl.canvas.height\n        ],\n        deltaTime: deltaTime\n    });\n    $d3d97b6e45377a39$var$gl.enable($d3d97b6e45377a39$var$gl.RASTERIZER_DISCARD);\n    $d3d97b6e45377a39$var$gl.bindTransformFeedback($d3d97b6e45377a39$var$gl.TRANSFORM_FEEDBACK, $d3d97b6e45377a39$var$current.tf);\n    $d3d97b6e45377a39$var$gl.beginTransformFeedback($d3d97b6e45377a39$var$gl.POINTS);\n    $d3d97b6e45377a39$var$gl.drawArrays($d3d97b6e45377a39$var$gl.POINTS, 0, $d3d97b6e45377a39$var$numParticles);\n    $d3d97b6e45377a39$var$gl.endTransformFeedback();\n    $d3d97b6e45377a39$var$gl.bindTransformFeedback($d3d97b6e45377a39$var$gl.TRANSFORM_FEEDBACK, null);\n    // turn on using fragment shaders again\n    $d3d97b6e45377a39$var$gl.disable($d3d97b6e45377a39$var$gl.RASTERIZER_DISCARD);\n    // now draw the particles.\n    $d3d97b6e45377a39$var$gl.useProgram($d3d97b6e45377a39$var$drawParticlesProgInfo.program);\n    $d3d97b6e45377a39$var$gl.bindVertexArray($d3d97b6e45377a39$var$current.drawVAI.vertexArrayObject);\n    $6MzNI.setUniformsAndBindTextures($d3d97b6e45377a39$var$drawParticlesProgInfo, {\n        matrix: $6MzNI.m4.ortho(0, $d3d97b6e45377a39$var$gl.canvas.width, 0, $d3d97b6e45377a39$var$gl.canvas.height, -1, 1)\n    });\n    $d3d97b6e45377a39$var$gl.drawArrays($d3d97b6e45377a39$var$gl.POINTS, 0, $d3d97b6e45377a39$var$numParticles);\n    // swap which buffer we will read from\n    // and which one we will write to\n    {\n        const temp = $d3d97b6e45377a39$var$current;\n        $d3d97b6e45377a39$var$current = $d3d97b6e45377a39$var$next;\n        $d3d97b6e45377a39$var$next = temp;\n    }\n    requestAnimationFrame($d3d97b6e45377a39$var$render);\n}\nrequestAnimationFrame($d3d97b6e45377a39$var$render);\n\n})();\n//# sourceMappingURL=index.aa7d888e.js.map\n","import * as twgl from \"twgl.js\"\r\n\r\nimport Stats from \"stats.js\"\r\n// stats();\r\nvar stats = new Stats();\r\nstats.showPanel(0);\r\ndocument.body.appendChild(stats.dom);\r\n\r\nconst updatePositionVS = `#version 300 es\r\nin vec2 oldPosition;\r\nin vec2 velocity;\r\n\r\nuniform float deltaTime;\r\nuniform vec2 canvasDimensions;\r\n\r\nout vec2 newPosition;\r\n\r\nvec2 euclideanModulo(vec2 n, vec2 m) {\r\n    return mod(mod(n, m) + m, m);\r\n}\r\n\r\nvoid main() {\r\n  newPosition = euclideanModulo(\r\n      oldPosition + velocity * deltaTime,\r\n      canvasDimensions);\r\n}\r\n`;\r\n\r\nconst updatePositionFS = `#version 300 es\r\nprecision highp float;\r\nvoid main() {\r\n}\r\n`;\r\n\r\nconst drawParticlesVS = `#version 300 es\r\nin vec4 position;\r\nuniform mat4 matrix;\r\n\r\nvoid main() {\r\n  // do the common matrix math\r\n  gl_Position = matrix * position;\r\n  gl_PointSize = 10.0;\r\n}\r\n`;\r\n\r\nconst drawParticlesFS = `#version 300 es\r\nprecision highp float;\r\nout vec4 outColor;\r\nvoid main() {\r\n  outColor = vec4(1, 0, 0, 1);\r\n}\r\n`;\r\n\r\n// Get A WebGL context\r\n/** @type {HTMLCanvasElement} */\r\nconst canvas = document.querySelector(\"#c\")! as HTMLCanvasElement;\r\nconst gl = canvas.getContext(\"webgl2\")!;\r\nif (!gl) {\r\n    throw new Error(\"no webgl2\");\r\n}\r\n\r\nconst updatePositionProgInfo = twgl.createProgramInfo(gl, [updatePositionVS, updatePositionFS], {\r\n    transformFeedbackVaryings: [\"newPosition\"],\r\n    transformFeedbackMode: gl.SEPARATE_ATTRIBS,\r\n});\r\nconst drawParticlesProgInfo = twgl.createProgramInfo(gl, [drawParticlesVS, drawParticlesFS]);\r\n\r\n// we're going to base the initial positions on the size\r\n// of the canvas so lets update the size of the canvas\r\n// to the initial size we want\r\ntwgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement);\r\ngl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n// create random positions and velocities.\r\nconst rand = (min, max) => {\r\n    if (max === undefined) {\r\n        max = min;\r\n        min = 0;\r\n    }\r\n    return Math.random() * (max - min) + min;\r\n};\r\nconst numParticles = 200;\r\nconst createPoints = (num, ranges) =>\r\n    new Array(num).fill(0).map(_ => ranges.map(range => rand(...range))).flat();\r\nconst positions = new Float32Array(createPoints(numParticles, [[canvas.width], [canvas.height]]));\r\nconst velocities = new Float32Array(createPoints(numParticles, [[-300, 300], [-300, 300]]));\r\n\r\nconst position1Buffer = twgl.createBufferFromTypedArray(gl, positions, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\nconst position2Buffer = twgl.createBufferFromTypedArray(gl, positions, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\nconst velocityBuffer = twgl.createBufferFromTypedArray(gl, velocities, gl.ARRAY_BUFFER, gl.STATIC_DRAW);\r\n\r\nconst updatePositionBI1to2 = twgl.createBufferInfoFromArrays(gl, {\r\n    oldPosition: {\r\n        buffer: position1Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n    velocity: {\r\n        buffer: velocityBuffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n    newPosition: {\r\n        buffer: position2Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n})\r\nconst updatePositionVAI1to2 = twgl.createVertexArrayInfo(gl, updatePositionProgInfo, updatePositionBI1to2);\r\n\r\nconst updatePositionBI2to1 = twgl.createBufferInfoFromArrays(gl, {\r\n    oldPosition: {\r\n        buffer: position2Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n    velocity: {\r\n        buffer: velocityBuffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n    newPosition: {\r\n        buffer: position1Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n})\r\nconst updatePositionVAI2to1 = twgl.createVertexArrayInfo(gl, updatePositionProgInfo, updatePositionBI2to1);\r\n\r\n\r\nconst drawVAI1 = twgl.createVertexArrayInfo(gl, drawParticlesProgInfo, twgl.createBufferInfoFromArrays(gl, {\r\n    position: {\r\n        buffer: position1Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    }\r\n}));\r\n\r\nconst drawVAI2 = twgl.createVertexArrayInfo(gl, drawParticlesProgInfo, twgl.createBufferInfoFromArrays(gl, {\r\n    position: {\r\n        buffer: position2Buffer,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    }\r\n}));\r\n\r\n// const tf1 = gl.createTransformFeedback();\r\n// gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, tf1);\r\n// gl.useProgram(updatePositionProgInfo.program);\r\n// gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER, \r\n//     updatePositionProgInfo.transformFeedbackInfo!.newPosition.index,\r\n//     updatePositionBI2.attribs!.newPosition.buffer\r\n// );\r\nconst tf2to1 = twgl.createTransformFeedback(gl, updatePositionProgInfo, updatePositionBI2to1);\r\nconst tf1to2 = twgl.createTransformFeedback(gl, updatePositionProgInfo, updatePositionBI1to2);\r\n\r\n// unbind left over stuff\r\ngl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\nlet current = {\r\n    // updateBI: updatePositionBI1to2,\r\n    updateVAI: updatePositionVAI1to2,  // read from position1\r\n    tf: tf1to2,                        // write to position2\r\n    drawVAI: drawVAI2,              // draw with position2\r\n};\r\nlet next = {\r\n    // updateBI: updatePositionBI2to1,\r\n    updateVAI: updatePositionVAI2to1,  // read from position2\r\n    tf: tf2to1,                        // write to position1\r\n    drawVAI: drawVAI1,              // draw with position1\r\n};\r\n\r\nlet then = 0;\r\nfunction render(time) {\r\n    stats.update();\r\n    // convert to seconds\r\n    time *= 0.001;\r\n    // Subtract the previous time from the current time\r\n    const deltaTime = time - then;\r\n    // Remember the current time for the next frame.\r\n    then = time;\r\n\r\n    if (twgl.resizeCanvasToDisplaySize(gl.canvas as HTMLCanvasElement)) {\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n    }\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    // compute the new positions\r\n    gl.useProgram(updatePositionProgInfo.program);\r\n    gl.bindVertexArray(current.updateVAI.vertexArrayObject!);\r\n    /*\r\n    Same as bindVertexArray, if we had no vertex array:\r\n    twgl.setBuffersAndAttributes(gl, updatePositionProgInfo, current.updateBI);\r\n    */\r\n    twgl.setUniformsAndBindTextures(updatePositionProgInfo, {\r\n        canvasDimensions: [gl.canvas.width, gl.canvas.height],\r\n        deltaTime: deltaTime,\r\n    })\r\n\r\n\r\n    gl.enable(gl.RASTERIZER_DISCARD);\r\n\r\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, current.tf);\r\n    gl.beginTransformFeedback(gl.POINTS);\r\n    gl.drawArrays(gl.POINTS, 0, numParticles);\r\n    gl.endTransformFeedback();\r\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\r\n\r\n    // turn on using fragment shaders again\r\n    gl.disable(gl.RASTERIZER_DISCARD);\r\n\r\n    // now draw the particles.\r\n    gl.useProgram(drawParticlesProgInfo.program);\r\n    gl.bindVertexArray(current.drawVAI.vertexArrayObject!);\r\n    twgl.setUniformsAndBindTextures(drawParticlesProgInfo, {\r\n        matrix: twgl.m4.ortho(0, gl.canvas.width, 0, gl.canvas.height, -1, 1)\r\n    })\r\n    gl.drawArrays(gl.POINTS, 0, numParticles);\r\n\r\n    // swap which buffer we will read from\r\n    // and which one we will write to\r\n    {\r\n        const temp = current;\r\n        current = next;\r\n        next = temp;\r\n    }\r\n\r\n    requestAnimationFrame(render);\r\n}\r\nrequestAnimationFrame(render);\r\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n"],"names":["f","a","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6MzNI","$a759912a70d9e191$exports","$d3d97b6e45377a39$var$stats","e","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","__esModule","default","body","$d3d97b6e45377a39$var$updatePositionVS","$d3d97b6e45377a39$var$updatePositionFS","$d3d97b6e45377a39$var$drawParticlesVS","$d3d97b6e45377a39$var$drawParticlesFS","$d3d97b6e45377a39$var$canvas","querySelector","$d3d97b6e45377a39$var$gl","$d3d97b6e45377a39$var$updatePositionProgInfo","createProgramInfo","transformFeedbackVaryings","transformFeedbackMode","SEPARATE_ATTRIBS","$d3d97b6e45377a39$var$drawParticlesProgInfo","resizeCanvasToDisplaySize","canvas","viewport","$d3d97b6e45377a39$var$rand","undefined","random","$d3d97b6e45377a39$var$createPoints","num","ranges","Array","fill","map","_","range","flat","$d3d97b6e45377a39$var$positions","Float32Array","$d3d97b6e45377a39$var$velocities","$d3d97b6e45377a39$var$position1Buffer","createBufferFromTypedArray","ARRAY_BUFFER","DYNAMIC_DRAW","$d3d97b6e45377a39$var$position2Buffer","$d3d97b6e45377a39$var$velocityBuffer","STATIC_DRAW","$d3d97b6e45377a39$var$updatePositionBI1to2","createBufferInfoFromArrays","oldPosition","buffer","numComponents","type","velocity","newPosition","$d3d97b6e45377a39$var$updatePositionVAI1to2","createVertexArrayInfo","$d3d97b6e45377a39$var$updatePositionBI2to1","$d3d97b6e45377a39$var$updatePositionVAI2to1","$d3d97b6e45377a39$var$drawVAI1","position","$d3d97b6e45377a39$var$drawVAI2","$d3d97b6e45377a39$var$tf2to1","createTransformFeedback","$d3d97b6e45377a39$var$tf1to2","bindBuffer","$d3d97b6e45377a39$var$current","updateVAI","tf","drawVAI","$d3d97b6e45377a39$var$next","$d3d97b6e45377a39$var$then","requestAnimationFrame","$d3d97b6e45377a39$var$render","time","deltaTime","clear","COLOR_BUFFER_BIT","useProgram","program","bindVertexArray","vertexArrayObject","setUniformsAndBindTextures","canvasDimensions","enable","RASTERIZER_DISCARD","bindTransformFeedback","TRANSFORM_FEEDBACK","beginTransformFeedback","POINTS","drawArrays","endTransformFeedback","disable","matrix","m4","ortho","temp"],"version":3,"file":"index.aa7d888e.js.map"}