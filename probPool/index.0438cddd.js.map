{"mappings":"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","sources":["<anon>","probPool/main.ts","node_modules/stats.js/build/stats.min.js"],"sourcesContent":["(function () {\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $6MzNI = parcelRequire(\"6MzNI\");\nvar $a759912a70d9e191$exports = {};\n// stats.js - http://github.com/mrdoob/stats.js\n(function(f, e) {\n    $a759912a70d9e191$exports = e();\n})($a759912a70d9e191$exports, function() {\n    var f = function() {\n        function e(a) {\n            c.appendChild(a.dom);\n            return a;\n        }\n        function u(a) {\n            for(var d = 0; d < c.children.length; d++)c.children[d].style.display = d === a ? \"block\" : \"none\";\n            l = a;\n        }\n        var l = 0, c = document.createElement(\"div\");\n        c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n        c.addEventListener(\"click\", function(a) {\n            a.preventDefault();\n            u(++l % c.children.length);\n        }, !1);\n        var k = (performance || Date).now(), g = k, a = 0, r = e(new f.Panel(\"FPS\", \"#0ff\", \"#002\")), h = e(new f.Panel(\"MS\", \"#0f0\", \"#020\"));\n        if (self.performance && self.performance.memory) var t = e(new f.Panel(\"MB\", \"#f08\", \"#201\"));\n        u(0);\n        return {\n            REVISION: 16,\n            dom: c,\n            addPanel: e,\n            showPanel: u,\n            begin: function() {\n                k = (performance || Date).now();\n            },\n            end: function() {\n                a++;\n                var c = (performance || Date).now();\n                h.update(c - k, 200);\n                if (c > g + 1E3 && (r.update(1E3 * a / (c - g), 100), g = c, a = 0, t)) {\n                    var d = performance.memory;\n                    t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                }\n                return c;\n            },\n            update: function() {\n                k = this.end();\n            },\n            domElement: c,\n            setMode: u\n        };\n    };\n    f.Panel = function(e, f, l) {\n        var c = Infinity, k = 0, g = Math.round, a = g(window.devicePixelRatio || 1), r = 80 * a, h = 48 * a, t = 3 * a, v = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n        q.width = r;\n        q.height = h;\n        q.style.cssText = \"width:80px;height:48px\";\n        var b = q.getContext(\"2d\");\n        b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n        b.textBaseline = \"top\";\n        b.fillStyle = l;\n        b.fillRect(0, 0, r, h);\n        b.fillStyle = f;\n        b.fillText(e, t, v);\n        b.fillRect(d, m, n, p);\n        b.fillStyle = l;\n        b.globalAlpha = .9;\n        b.fillRect(d, m, n, p);\n        return {\n            dom: q,\n            update: function(h, w) {\n                c = Math.min(c, h);\n                k = Math.max(k, h);\n                b.fillStyle = l;\n                b.globalAlpha = 1;\n                b.fillRect(0, 0, r, m);\n                b.fillStyle = f;\n                b.fillText(g(h) + \" \" + e + \" (\" + g(c) + \"-\" + g(k) + \")\", t, v);\n                b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                b.fillRect(d + n - a, m, a, p);\n                b.fillStyle = l;\n                b.globalAlpha = .9;\n                b.fillRect(d + n - a, m, a, g((1 - h / w) * p));\n            }\n        };\n    };\n    return f;\n});\n\n\n// stats();\nvar $be42fc76ac236db9$var$stats = new (0, (/*@__PURE__*/$parcel$interopDefault($a759912a70d9e191$exports)))();\n$be42fc76ac236db9$var$stats.showPanel(0);\ndocument.body.appendChild($be42fc76ac236db9$var$stats.dom);\n//// init\nconst $be42fc76ac236db9$var$canvas = document.querySelector(\"#c\");\nconst $be42fc76ac236db9$var$gl = $be42fc76ac236db9$var$canvas.getContext(\"webgl2\", {\n    alpha: false\n});\n$be42fc76ac236db9$var$gl.clearColor(0.5, 0.5, 0.75, 1.0);\n$be42fc76ac236db9$var$gl.enable($be42fc76ac236db9$var$gl.BLEND);\n$be42fc76ac236db9$var$gl.blendFunc($be42fc76ac236db9$var$gl.SRC_ALPHA, $be42fc76ac236db9$var$gl.ONE_MINUS_SRC_ALPHA);\n// console.log(\"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS))\n// console.log(\"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS))\n// console.log(\"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS))\n// game logic\nconst $be42fc76ac236db9$var$n_universes = 100000;\nconst $be42fc76ac236db9$var$n_balls = 2;\nconst $be42fc76ac236db9$var$ball_r = .05;\nconst $be42fc76ac236db9$var$positions_cpu = new Float32Array($be42fc76ac236db9$var$n_universes * $be42fc76ac236db9$var$n_balls * 2);\nfor(let b = 0; b < $be42fc76ac236db9$var$n_balls; b++){\n    let start_x = Math.random() - .5;\n    let start_y = Math.random() - .5;\n    for(let k = 0; k < $be42fc76ac236db9$var$n_universes; k++){\n        let base_index = (k * $be42fc76ac236db9$var$n_balls + b) * 2;\n        $be42fc76ac236db9$var$positions_cpu[base_index + 0] = start_x;\n        $be42fc76ac236db9$var$positions_cpu[base_index + 1] = start_y;\n    }\n}\n// initial chaos\nfor(let k = 0; k < $be42fc76ac236db9$var$n_universes; k++){\n    const ang = Math.PI * 2 * k / $be42fc76ac236db9$var$n_universes;\n    $be42fc76ac236db9$var$positions_cpu[k * $be42fc76ac236db9$var$n_balls * 2 + 0] += Math.cos(ang) * .05;\n    $be42fc76ac236db9$var$positions_cpu[k * $be42fc76ac236db9$var$n_balls * 2 + 1] += Math.sin(ang) * .05;\n}\nconst $be42fc76ac236db9$var$velocities_cpu = new Float32Array($be42fc76ac236db9$var$n_universes * $be42fc76ac236db9$var$n_balls * 2);\n// Ball 0 starts with random vel\n// for (let k = 0; k < n_universes; k++) {\n//     velocities_cpu[k * n_balls * 2 + 0] = Math.random() - .5;\n//     velocities_cpu[k * n_balls * 2 + 1] = Math.random() - .5;\n// }\n// double buffer pattern\nconst $be42fc76ac236db9$var$positions1_gpu = $6MzNI.createBufferFromTypedArray($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$positions_cpu, $be42fc76ac236db9$var$gl.ARRAY_BUFFER, $be42fc76ac236db9$var$gl.DYNAMIC_DRAW);\nconst $be42fc76ac236db9$var$positions2_gpu = $6MzNI.createBufferFromTypedArray($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$positions_cpu, $be42fc76ac236db9$var$gl.ARRAY_BUFFER, $be42fc76ac236db9$var$gl.DYNAMIC_DRAW);\nconst $be42fc76ac236db9$var$velocities1_gpu = $6MzNI.createBufferFromTypedArray($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$velocities_cpu, $be42fc76ac236db9$var$gl.ARRAY_BUFFER, $be42fc76ac236db9$var$gl.DYNAMIC_DRAW);\nconst $be42fc76ac236db9$var$velocities2_gpu = $6MzNI.createBufferFromTypedArray($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$velocities_cpu, $be42fc76ac236db9$var$gl.ARRAY_BUFFER, $be42fc76ac236db9$var$gl.DYNAMIC_DRAW);\nconst $be42fc76ac236db9$var$update_bi_1to2 = $6MzNI.createBufferInfoFromArrays($be42fc76ac236db9$var$gl, {\n    old_pos: {\n        buffer: $be42fc76ac236db9$var$positions1_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    new_pos: {\n        buffer: $be42fc76ac236db9$var$positions2_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    old_vel: {\n        buffer: $be42fc76ac236db9$var$velocities1_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    new_vel: {\n        buffer: $be42fc76ac236db9$var$velocities2_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    }\n});\nconst $be42fc76ac236db9$var$update_bi_2to1 = $6MzNI.createBufferInfoFromArrays($be42fc76ac236db9$var$gl, {\n    old_pos: {\n        buffer: $be42fc76ac236db9$var$positions2_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    new_pos: {\n        buffer: $be42fc76ac236db9$var$positions1_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    old_vel: {\n        buffer: $be42fc76ac236db9$var$velocities2_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    },\n    new_vel: {\n        buffer: $be42fc76ac236db9$var$velocities1_gpu,\n        numComponents: $be42fc76ac236db9$var$n_balls * 2,\n        type: Float32Array\n    }\n});\nconst $be42fc76ac236db9$var$draw_1 = $6MzNI.createBufferInfoFromArrays($be42fc76ac236db9$var$gl, {\n    pos: {\n        buffer: $be42fc76ac236db9$var$positions1_gpu,\n        numComponents: 2,\n        type: Float32Array\n    }\n});\nconst $be42fc76ac236db9$var$draw_2 = $6MzNI.createBufferInfoFromArrays($be42fc76ac236db9$var$gl, {\n    pos: {\n        buffer: $be42fc76ac236db9$var$positions2_gpu,\n        numComponents: 2,\n        type: Float32Array\n    }\n});\nconst $be42fc76ac236db9$var$update_pinfo = $6MzNI.createProgramInfo($be42fc76ac236db9$var$gl, [\n    // vs\n    `#version 300 es\r\n\r\n    precision highp float;\r\n\r\n    #define ball_r ${$be42fc76ac236db9$var$ball_r.toFixed(10)}\r\n    #define bounce .9\r\n    #define drag .99\r\n\r\n    // positions of 2 balls\r\n    in vec4 old_pos;\r\n    out vec4 new_pos;\r\n    // velocities of 2 balls\r\n    in vec4 old_vel;\r\n    out vec4 new_vel;\r\n\r\n    uniform vec2 u_impulse;\r\n\r\n    // pos, vel for each ball\r\n    void collide(in vec4 b1, in vec4 b2, out vec4 r1, out vec4 r2) {\r\n        r1 = b1;\r\n        r2 = b2;\r\n\r\n        vec2 delta = b1.xy - b2.xy;\r\n        float distSq = dot(delta, delta);\r\n        if (distSq > 0.0 && distSq < 4.0 * ball_r * ball_r) {\r\n            float dist = sqrt(distSq);\r\n            // assumption: all balls have the same mass\r\n            // intuition: the balls exchange their momentum\r\n            // but only on the direction joining them\r\n\r\n            // 1. avoid overlap\r\n            float push = (2.0 * ball_r - dist) * .5 * bounce / dist;\r\n            r1.xy += delta * push;\r\n            r2.xy -= delta * push;\r\n\r\n            // 2. exchange momentums\r\n            vec2 momentum = delta * (dot(delta, b1.zw) - dot(delta, b2.zw)) / distSq;\r\n            r1.zw -= momentum;\r\n            r2.zw += momentum;\r\n        }        \r\n    }\r\n\r\n    void main() {\r\n        float dt = 0.01;\r\n        new_vel = old_vel + vec4(u_impulse, 0.0, 0.0);\r\n        new_pos = old_pos + new_vel * dt;\r\n        // bounce on borders\r\n        bvec4 mask_negative = lessThan(new_pos, vec4(${(-1 + $be42fc76ac236db9$var$ball_r).toFixed(10)}));\r\n        bvec4 mask_positive = greaterThan(new_pos, vec4(${(1.0 - $be42fc76ac236db9$var$ball_r).toFixed(10)}));\r\n        new_pos = mix(new_pos, -${(2.0 - 2 * $be42fc76ac236db9$var$ball_r).toFixed(10)} - new_pos, mask_negative);\r\n        new_pos = mix(new_pos, ${(2.0 - 2 * $be42fc76ac236db9$var$ball_r).toFixed(10)} - new_pos, mask_positive);\r\n        bvec4 mask_both = bvec4(\r\n            mask_positive[0] || mask_negative[0],\r\n            mask_positive[1] || mask_negative[1],\r\n            mask_positive[2] || mask_negative[2],\r\n            mask_positive[3] || mask_negative[3]\r\n        );\r\n        new_vel = mix(new_vel, -new_vel, mask_both);\r\n        new_vel *= drag;\r\n\r\n        // collision\r\n        vec4 r1;\r\n        vec4 r2;\r\n        collide(\r\n            vec4(new_pos.xy, new_vel.xy), \r\n            vec4(new_pos.zw, new_vel.zw), r1, r2);\r\n        new_pos = vec4(r1.xy, r2.xy);\r\n        new_vel = vec4(r1.zw, r2.zw);\r\n    }\r\n    `,\n    // fs\n    `#version 300 es\r\n    precision highp float;\r\n\r\n    void main() {}\r\n    `\n], {\n    transformFeedbackVaryings: [\n        \"new_pos\",\n        \"new_vel\"\n    ],\n    transformFeedbackMode: $be42fc76ac236db9$var$gl.SEPARATE_ATTRIBS\n});\nconst $be42fc76ac236db9$var$draw_pinfo = $6MzNI.createProgramInfo($be42fc76ac236db9$var$gl, [\n    // vs\n    `#version 300 es\r\n\r\n    in vec2 pos;\r\n\r\n    out vec3 v_ball_color;\r\n\r\n    void main() {\r\n        gl_Position = vec4(pos, 0.0, 1.0);\r\n        gl_PointSize = ${($be42fc76ac236db9$var$gl.canvas.width * 2 * $be42fc76ac236db9$var$ball_r).toFixed(10)};\r\n        v_ball_color = mix(vec3(1.0, 0, 0), vec3(0.0, 1, 0), mod(float(gl_VertexID), 2.0));\r\n    }\r\n    `,\n    // fs\n    `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec3 v_ball_color;\r\n\r\n    out vec4 out_color;\r\n    \r\n    void main() {\r\n        float distSq = dot(gl_PointCoord - .5, gl_PointCoord - .5);\r\n        float alpha = smoothstep(.25, .20, distSq);\r\n        float outline = smoothstep(.27, .20, distSq);\r\n        out_color = vec4(v_ball_color * outline, alpha * .1);\r\n    }\r\n    `\n]);\nconst $be42fc76ac236db9$var$update_tf_2to1 = $6MzNI.createTransformFeedback($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$update_pinfo, $be42fc76ac236db9$var$update_bi_2to1);\nconst $be42fc76ac236db9$var$update_tf_1to2 = $6MzNI.createTransformFeedback($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$update_pinfo, $be42fc76ac236db9$var$update_bi_1to2);\n// unbind left over stuff\n$be42fc76ac236db9$var$gl.bindBuffer($be42fc76ac236db9$var$gl.ARRAY_BUFFER, null);\nconsole.log(\"calc: \", $be42fc76ac236db9$var$n_universes * $be42fc76ac236db9$var$n_balls);\nconsole.log(\"real: \", $be42fc76ac236db9$var$draw_1.numElements);\nlet $be42fc76ac236db9$var$cur_buffers = {\n    update_bi: $be42fc76ac236db9$var$update_bi_1to2,\n    tf: $be42fc76ac236db9$var$update_tf_1to2,\n    draw_bi: $be42fc76ac236db9$var$draw_2\n};\nlet $be42fc76ac236db9$var$next_buffers = {\n    update_bi: $be42fc76ac236db9$var$update_bi_2to1,\n    tf: $be42fc76ac236db9$var$update_tf_2to1,\n    draw_bi: $be42fc76ac236db9$var$draw_1\n};\nlet $be42fc76ac236db9$var$last_click_pos = null;\nlet $be42fc76ac236db9$var$pending_impulse = [\n    0,\n    0\n];\ndocument.addEventListener(\"mousedown\", (ev)=>{\n    $be42fc76ac236db9$var$last_click_pos = [\n        ev.offsetX,\n        ev.offsetY\n    ];\n});\ndocument.addEventListener(\"mouseup\", (ev)=>{\n    let cur_pos = [\n        ev.offsetX,\n        ev.offsetY\n    ];\n    const force = .01;\n    $be42fc76ac236db9$var$pending_impulse = [\n        -(cur_pos[0] - $be42fc76ac236db9$var$last_click_pos[0]) * force,\n        (cur_pos[1] - $be42fc76ac236db9$var$last_click_pos[1]) * force\n    ];\n    $be42fc76ac236db9$var$last_click_pos = null;\n});\nlet $be42fc76ac236db9$var$last_time = 0;\nfunction $be42fc76ac236db9$var$update(cur_time) {\n    $be42fc76ac236db9$var$stats.update();\n    if ($6MzNI.resizeCanvasToDisplaySize($be42fc76ac236db9$var$canvas)) // on resize\n    $be42fc76ac236db9$var$gl.viewport(0, 0, $be42fc76ac236db9$var$gl.drawingBufferWidth, $be42fc76ac236db9$var$gl.drawingBufferHeight);\n    let delta = cur_time - $be42fc76ac236db9$var$last_time;\n    $be42fc76ac236db9$var$last_time = cur_time;\n    //// update\n    $be42fc76ac236db9$var$gl.useProgram($be42fc76ac236db9$var$update_pinfo.program);\n    $6MzNI.setBuffersAndAttributes($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$update_pinfo, $be42fc76ac236db9$var$cur_buffers.update_bi);\n    $be42fc76ac236db9$var$gl.enable($be42fc76ac236db9$var$gl.RASTERIZER_DISCARD);\n    $be42fc76ac236db9$var$gl.bindTransformFeedback($be42fc76ac236db9$var$gl.TRANSFORM_FEEDBACK, $be42fc76ac236db9$var$cur_buffers.tf);\n    $6MzNI.setUniforms($be42fc76ac236db9$var$update_pinfo, {\n        u_impulse: $be42fc76ac236db9$var$pending_impulse\n    });\n    $be42fc76ac236db9$var$gl.beginTransformFeedback($be42fc76ac236db9$var$gl.POINTS);\n    $be42fc76ac236db9$var$gl.drawArrays($be42fc76ac236db9$var$gl.POINTS, 0, $be42fc76ac236db9$var$n_universes);\n    $be42fc76ac236db9$var$gl.endTransformFeedback();\n    $be42fc76ac236db9$var$gl.disable($be42fc76ac236db9$var$gl.RASTERIZER_DISCARD);\n    // unbind left over stuff\n    $be42fc76ac236db9$var$gl.bindTransformFeedback($be42fc76ac236db9$var$gl.TRANSFORM_FEEDBACK, null);\n    $be42fc76ac236db9$var$gl.bindBuffer($be42fc76ac236db9$var$gl.ARRAY_BUFFER, null);\n    $be42fc76ac236db9$var$gl.bindBuffer($be42fc76ac236db9$var$gl.TRANSFORM_FEEDBACK_BUFFER, null);\n    $be42fc76ac236db9$var$pending_impulse = [\n        0,\n        0\n    ];\n    //// draw\n    $be42fc76ac236db9$var$gl.clear($be42fc76ac236db9$var$gl.COLOR_BUFFER_BIT);\n    $be42fc76ac236db9$var$gl.useProgram($be42fc76ac236db9$var$draw_pinfo.program);\n    $6MzNI.setBuffersAndAttributes($be42fc76ac236db9$var$gl, $be42fc76ac236db9$var$draw_pinfo, $be42fc76ac236db9$var$cur_buffers.draw_bi);\n    $be42fc76ac236db9$var$gl.drawArrays($be42fc76ac236db9$var$gl.POINTS, 0, $be42fc76ac236db9$var$n_universes * $be42fc76ac236db9$var$n_balls);\n    {\n        const temp = $be42fc76ac236db9$var$cur_buffers;\n        $be42fc76ac236db9$var$cur_buffers = $be42fc76ac236db9$var$next_buffers;\n        $be42fc76ac236db9$var$next_buffers = temp;\n    }\n    requestAnimationFrame($be42fc76ac236db9$var$update);\n}\nrequestAnimationFrame($be42fc76ac236db9$var$update);\n\n})();\n//# sourceMappingURL=index.0438cddd.js.map\n","import * as twgl from \"twgl.js\"\r\n\r\nimport Stats from \"stats.js\"\r\n// stats();\r\nvar stats = new Stats();\r\nstats.showPanel(0);\r\ndocument.body.appendChild(stats.dom);\r\n\r\n//// init\r\nconst canvas = document.querySelector(\"#c\")! as HTMLCanvasElement;\r\nconst gl = canvas.getContext(\"webgl2\", { alpha: false })!;\r\ngl.clearColor(0.5, 0.5, 0.75, 1.0);\r\ngl.enable(gl.BLEND);\r\ngl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n// console.log(\"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS))\r\n// console.log(\"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS))\r\n// console.log(\"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: \", gl.getParameter(gl.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS))\r\n\r\n// game logic\r\nconst n_universes = 100_000;\r\nconst n_balls = 2;\r\nconst ball_r = .05;\r\n\r\nconst positions_cpu = new Float32Array(n_universes * n_balls * 2);\r\nfor (let b = 0; b < n_balls; b++) {\r\n    let start_x = Math.random() - .5;\r\n    let start_y = Math.random() - .5;\r\n    for (let k = 0; k < n_universes; k++) {\r\n        let base_index = (k * n_balls + b) * 2;\r\n        positions_cpu[base_index + 0] = start_x;\r\n        positions_cpu[base_index + 1] = start_y;\r\n    }\r\n}\r\n// initial chaos\r\nfor (let k = 0; k < n_universes; k++) {\r\n    const ang = Math.PI * 2 * k / n_universes;\r\n    positions_cpu[k * n_balls * 2 + 0] += Math.cos(ang) * .05;\r\n    positions_cpu[k * n_balls * 2 + 1] += Math.sin(ang) * .05;\r\n}\r\nconst velocities_cpu = new Float32Array(n_universes * n_balls * 2);\r\n// Ball 0 starts with random vel\r\n// for (let k = 0; k < n_universes; k++) {\r\n//     velocities_cpu[k * n_balls * 2 + 0] = Math.random() - .5;\r\n//     velocities_cpu[k * n_balls * 2 + 1] = Math.random() - .5;\r\n// }\r\n\r\n// double buffer pattern\r\nconst positions1_gpu = twgl.createBufferFromTypedArray(gl, positions_cpu, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\nconst positions2_gpu = twgl.createBufferFromTypedArray(gl, positions_cpu, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\nconst velocities1_gpu = twgl.createBufferFromTypedArray(gl, velocities_cpu, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\nconst velocities2_gpu = twgl.createBufferFromTypedArray(gl, velocities_cpu, gl.ARRAY_BUFFER, gl.DYNAMIC_DRAW);\r\n\r\nconst update_bi_1to2 = twgl.createBufferInfoFromArrays(gl, {\r\n    old_pos: {\r\n        buffer: positions1_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    new_pos: {\r\n        buffer: positions2_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    old_vel: {\r\n        buffer: velocities1_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    new_vel: {\r\n        buffer: velocities2_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n});\r\nconst update_bi_2to1 = twgl.createBufferInfoFromArrays(gl, {\r\n    old_pos: {\r\n        buffer: positions2_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    new_pos: {\r\n        buffer: positions1_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    old_vel: {\r\n        buffer: velocities2_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n    new_vel: {\r\n        buffer: velocities1_gpu,\r\n        numComponents: n_balls * 2,\r\n        type: Float32Array,\r\n    },\r\n});\r\n\r\nconst draw_1 = twgl.createBufferInfoFromArrays(gl, {\r\n    pos: {\r\n        buffer: positions1_gpu,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n});\r\nconst draw_2 = twgl.createBufferInfoFromArrays(gl, {\r\n    pos: {\r\n        buffer: positions2_gpu,\r\n        numComponents: 2,\r\n        type: Float32Array,\r\n    },\r\n});\r\n\r\nconst update_pinfo = twgl.createProgramInfo(gl, [\r\n    // vs\r\n    `#version 300 es\r\n\r\n    precision highp float;\r\n\r\n    #define ball_r ${(ball_r).toFixed(10)}\r\n    #define bounce .9\r\n    #define drag .99\r\n\r\n    // positions of 2 balls\r\n    in vec4 old_pos;\r\n    out vec4 new_pos;\r\n    // velocities of 2 balls\r\n    in vec4 old_vel;\r\n    out vec4 new_vel;\r\n\r\n    uniform vec2 u_impulse;\r\n\r\n    // pos, vel for each ball\r\n    void collide(in vec4 b1, in vec4 b2, out vec4 r1, out vec4 r2) {\r\n        r1 = b1;\r\n        r2 = b2;\r\n\r\n        vec2 delta = b1.xy - b2.xy;\r\n        float distSq = dot(delta, delta);\r\n        if (distSq > 0.0 && distSq < 4.0 * ball_r * ball_r) {\r\n            float dist = sqrt(distSq);\r\n            // assumption: all balls have the same mass\r\n            // intuition: the balls exchange their momentum\r\n            // but only on the direction joining them\r\n\r\n            // 1. avoid overlap\r\n            float push = (2.0 * ball_r - dist) * .5 * bounce / dist;\r\n            r1.xy += delta * push;\r\n            r2.xy -= delta * push;\r\n\r\n            // 2. exchange momentums\r\n            vec2 momentum = delta * (dot(delta, b1.zw) - dot(delta, b2.zw)) / distSq;\r\n            r1.zw -= momentum;\r\n            r2.zw += momentum;\r\n        }        \r\n    }\r\n\r\n    void main() {\r\n        float dt = 0.01;\r\n        new_vel = old_vel + vec4(u_impulse, 0.0, 0.0);\r\n        new_pos = old_pos + new_vel * dt;\r\n        // bounce on borders\r\n        bvec4 mask_negative = lessThan(new_pos, vec4(${(-1.0 + ball_r).toFixed(10)}));\r\n        bvec4 mask_positive = greaterThan(new_pos, vec4(${(1.0 - ball_r).toFixed(10)}));\r\n        new_pos = mix(new_pos, -${(2.0 - 2 * ball_r).toFixed(10)} - new_pos, mask_negative);\r\n        new_pos = mix(new_pos, ${(2.0 - 2 * ball_r).toFixed(10)} - new_pos, mask_positive);\r\n        bvec4 mask_both = bvec4(\r\n            mask_positive[0] || mask_negative[0],\r\n            mask_positive[1] || mask_negative[1],\r\n            mask_positive[2] || mask_negative[2],\r\n            mask_positive[3] || mask_negative[3]\r\n        );\r\n        new_vel = mix(new_vel, -new_vel, mask_both);\r\n        new_vel *= drag;\r\n\r\n        // collision\r\n        vec4 r1;\r\n        vec4 r2;\r\n        collide(\r\n            vec4(new_pos.xy, new_vel.xy), \r\n            vec4(new_pos.zw, new_vel.zw), r1, r2);\r\n        new_pos = vec4(r1.xy, r2.xy);\r\n        new_vel = vec4(r1.zw, r2.zw);\r\n    }\r\n    `,\r\n    // fs\r\n    `#version 300 es\r\n    precision highp float;\r\n\r\n    void main() {}\r\n    `\r\n], {\r\n    transformFeedbackVaryings: [\"new_pos\", \"new_vel\"],\r\n    transformFeedbackMode: gl.SEPARATE_ATTRIBS,\r\n});\r\n\r\nconst draw_pinfo = twgl.createProgramInfo(gl, [\r\n    // vs\r\n    `#version 300 es\r\n\r\n    in vec2 pos;\r\n\r\n    out vec3 v_ball_color;\r\n\r\n    void main() {\r\n        gl_Position = vec4(pos, 0.0, 1.0);\r\n        gl_PointSize = ${(gl.canvas.width * 2 * ball_r).toFixed(10)};\r\n        v_ball_color = mix(vec3(1.0, 0, 0), vec3(0.0, 1, 0), mod(float(gl_VertexID), 2.0));\r\n    }\r\n    `,\r\n    // fs\r\n    `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec3 v_ball_color;\r\n\r\n    out vec4 out_color;\r\n    \r\n    void main() {\r\n        float distSq = dot(gl_PointCoord - .5, gl_PointCoord - .5);\r\n        float alpha = smoothstep(.25, .20, distSq);\r\n        float outline = smoothstep(.27, .20, distSq);\r\n        out_color = vec4(v_ball_color * outline, alpha * .1);\r\n    }\r\n    `\r\n]);\r\n\r\nconst update_tf_2to1 = twgl.createTransformFeedback(gl, update_pinfo, update_bi_2to1);\r\nconst update_tf_1to2 = twgl.createTransformFeedback(gl, update_pinfo, update_bi_1to2);\r\n// unbind left over stuff\r\ngl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n\r\nconsole.log(\"calc: \", n_universes * n_balls);\r\nconsole.log(\"real: \", draw_1.numElements);\r\n\r\nlet cur_buffers = {\r\n    update_bi: update_bi_1to2, // read from position1\r\n    tf: update_tf_1to2,    // write to position2\r\n    draw_bi: draw_2,      // draw with position2\r\n}\r\n\r\nlet next_buffers = {\r\n    update_bi: update_bi_2to1, // read from position2\r\n    tf: update_tf_2to1,    // write to position1\r\n    draw_bi: draw_1,      // draw with position1\r\n}\r\n\r\ntype Vec2 = number[];\r\nlet last_click_pos: Vec2 | null = null;\r\nlet pending_impulse: Vec2 = [0, 0];\r\n\r\ndocument.addEventListener(\"mousedown\", ev => {\r\n    last_click_pos = [ev.offsetX, ev.offsetY];\r\n});\r\n\r\ndocument.addEventListener(\"mouseup\", ev => {\r\n    let cur_pos = [ev.offsetX, ev.offsetY];\r\n    const force = .01;\r\n    pending_impulse = [-(cur_pos[0] - last_click_pos![0]) * force, (cur_pos[1] - last_click_pos![1]) * force];\r\n    last_click_pos = null;\r\n})\r\n\r\nlet last_time = 0;\r\nfunction update(cur_time) {\r\n    stats.update();\r\n    if (twgl.resizeCanvasToDisplaySize(canvas)) {\r\n        // on resize\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n    }\r\n    let delta = cur_time - last_time;\r\n    last_time = cur_time;\r\n\r\n    //// update\r\n    gl.useProgram(update_pinfo.program);\r\n\r\n    twgl.setBuffersAndAttributes(gl, update_pinfo, cur_buffers.update_bi);\r\n    gl.enable(gl.RASTERIZER_DISCARD);\r\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, cur_buffers.tf);\r\n    twgl.setUniforms(update_pinfo, {\r\n        u_impulse: pending_impulse,\r\n    });\r\n    gl.beginTransformFeedback(gl.POINTS);\r\n    gl.drawArrays(gl.POINTS, 0, n_universes);\r\n    gl.endTransformFeedback();\r\n    gl.disable(gl.RASTERIZER_DISCARD);\r\n    // unbind left over stuff\r\n    gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK, null);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    gl.bindBuffer(gl.TRANSFORM_FEEDBACK_BUFFER, null);\r\n\r\n    pending_impulse = [0, 0];\r\n\r\n    //// draw\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n    gl.useProgram(draw_pinfo.program);\r\n    twgl.setBuffersAndAttributes(gl, draw_pinfo, cur_buffers.draw_bi);\r\n    gl.drawArrays(gl.POINTS, 0, n_universes * n_balls);\r\n\r\n    {\r\n        const temp = cur_buffers;\r\n        cur_buffers = next_buffers;\r\n        next_buffers = temp;\r\n    }\r\n\r\n    requestAnimationFrame(update);\r\n}\r\n\r\nrequestAnimationFrame(update);\r\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n"],"names":["f","a","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6MzNI","$a759912a70d9e191$exports","$be42fc76ac236db9$var$stats","e","c","appendChild","dom","u","d","children","length","style","display","l","document","createElement","cssText","addEventListener","preventDefault","k","performance","Date","now","g","r","Panel","h","memory","t","REVISION","addPanel","showPanel","begin","end","update","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","Infinity","Math","round","devicePixelRatio","v","m","n","p","q","width","height","b","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","w","min","max","drawImage","__esModule","default","body","$be42fc76ac236db9$var$canvas","querySelector","$be42fc76ac236db9$var$gl","alpha","clearColor","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","$be42fc76ac236db9$var$positions_cpu","Float32Array","$be42fc76ac236db9$var$n_universes","start_x","random","start_y","base_index","ang","PI","cos","sin","$be42fc76ac236db9$var$velocities_cpu","$be42fc76ac236db9$var$positions1_gpu","createBufferFromTypedArray","ARRAY_BUFFER","DYNAMIC_DRAW","$be42fc76ac236db9$var$positions2_gpu","$be42fc76ac236db9$var$velocities1_gpu","$be42fc76ac236db9$var$velocities2_gpu","$be42fc76ac236db9$var$update_bi_1to2","createBufferInfoFromArrays","old_pos","buffer","numComponents","$be42fc76ac236db9$var$n_balls","type","new_pos","old_vel","new_vel","$be42fc76ac236db9$var$update_bi_2to1","$be42fc76ac236db9$var$draw_1","pos","$be42fc76ac236db9$var$draw_2","$be42fc76ac236db9$var$update_pinfo","createProgramInfo","$be42fc76ac236db9$var$ball_r","toFixed","transformFeedbackVaryings","transformFeedbackMode","SEPARATE_ATTRIBS","$be42fc76ac236db9$var$draw_pinfo","canvas","$be42fc76ac236db9$var$update_tf_2to1","createTransformFeedback","$be42fc76ac236db9$var$update_tf_1to2","bindBuffer","console","log","numElements","$be42fc76ac236db9$var$cur_buffers","update_bi","tf","draw_bi","$be42fc76ac236db9$var$next_buffers","$be42fc76ac236db9$var$last_click_pos","$be42fc76ac236db9$var$pending_impulse","ev","offsetX","offsetY","cur_pos","requestAnimationFrame","$be42fc76ac236db9$var$update","cur_time","resizeCanvasToDisplaySize","viewport","drawingBufferWidth","drawingBufferHeight","useProgram","program","setBuffersAndAttributes","RASTERIZER_DISCARD","bindTransformFeedback","TRANSFORM_FEEDBACK","setUniforms","u_impulse","beginTransformFeedback","POINTS","drawArrays","endTransformFeedback","disable","TRANSFORM_FEEDBACK_BUFFER","clear","COLOR_BUFFER_BIT","temp"],"version":3,"file":"index.0438cddd.js.map"}