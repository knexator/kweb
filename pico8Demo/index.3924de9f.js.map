{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,e,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,E,S,Q,S,C,C,C,ECAA,a,E,E,Q,W,W,O,C,E,S,C,E,O,E,C,G,E,E,Q,U,W,O,C,E,S,C,E,O,E,C,GAEA,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,KAAK,GACd,EAAI,EAAG,EAAI,EAAK,OAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,G,E,S,Q,S,C,C,C,E,E,E,Q,e,W,O,C,E,S,C,E,O,E,C,ECfA,CAAA,aAEA,IAkCA,EAlCI,EAAY,CAAC,EAkCjB,EAjCA,SAA4B,CAAE,EAC5B,IAAI,EAAQ,CAAS,CAAC,EAAG,CAKzB,OAJK,IACH,EAAQ,AAKZ,WACE,GAAI,CACF,MAAM,AAAI,OACZ,CAAE,MAAO,EAAK,CACZ,IAAI,EAAU,AAAC,CAAA,GAAK,EAAI,KAAA,EAAO,MAAM,oEACrC,GAAI,EAGF,MAMI,AAAA,CAAA,GANc,CAAO,CAAC,EAAE,AAMnB,EAAK,QAAQ,0EAA2E,MAAQ,GAJ7G,CACA,MAAO,GACT,IAhBI,CAAS,CAAC,EAAG,CAAG,GAEX,CACT,C,GCVA,AAAA,EAAA,SAAA,SAA8C,KAAK,MAAM,mP,I,E,E,SE6DlD,SAAS,EAAM,CAAa,CAAE,CAAqB,CAAE,CAAqB,EAC7E,OAAO,KAAK,IAAI,EAAe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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-1673134eab1436a9.js","pico8Demo/main.ts","kommon/math.ts","kommon/kanvas.ts","kommon/kommon.ts","kommon/grid2D.ts","node_modules/@parcel/runtime-js/lib/runtime-e4b88825f9df9eb3.js","node_modules/@parcel/runtime-js/lib/runtime-56bb3c46d72db78c.js","node_modules/@parcel/runtime-js/lib/runtime-ef031e03fcd2bb8a.js"],"sourcesContent":["(function () {\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\nparcelRequire.register(\"iE7OH\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", function () { return $0380ce8f1f064ccc$export$6503ec6e8aabbaf; }, function (v) { return $0380ce8f1f064ccc$export$6503ec6e8aabbaf = v; });\n$parcel$export(module.exports, \"resolve\", function () { return $0380ce8f1f064ccc$export$f7ad0328861e2f03; }, function (v) { return $0380ce8f1f064ccc$export$f7ad0328861e2f03 = v; });\nvar $0380ce8f1f064ccc$export$6503ec6e8aabbaf;\nvar $0380ce8f1f064ccc$export$f7ad0328861e2f03;\n\"use strict\";\nvar $0380ce8f1f064ccc$var$mapping = {};\nfunction $0380ce8f1f064ccc$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$0380ce8f1f064ccc$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $0380ce8f1f064ccc$var$resolve(id) {\n    var resolved = $0380ce8f1f064ccc$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$0380ce8f1f064ccc$export$6503ec6e8aabbaf = $0380ce8f1f064ccc$var$register;\n$0380ce8f1f064ccc$export$f7ad0328861e2f03 = $0380ce8f1f064ccc$var$resolve;\n\n});\n\nparcelRequire.register(\"aNJCr\", function(module, exports) {\n\n$parcel$export(module.exports, \"getBundleURL\", function () { return $7dd1ddf6834435ca$export$bdfd709ae4826697; }, function (v) { return $7dd1ddf6834435ca$export$bdfd709ae4826697 = v; });\nvar $7dd1ddf6834435ca$export$bdfd709ae4826697;\nvar $7dd1ddf6834435ca$export$c9e73fbda7da57b6;\nvar $7dd1ddf6834435ca$export$5a759dc7a1cfb72a;\n\"use strict\";\nvar $7dd1ddf6834435ca$var$bundleURL = {};\nfunction $7dd1ddf6834435ca$var$getBundleURLCached(id) {\n    var value = $7dd1ddf6834435ca$var$bundleURL[id];\n    if (!value) {\n        value = $7dd1ddf6834435ca$var$getBundleURL();\n        $7dd1ddf6834435ca$var$bundleURL[id] = value;\n    }\n    return value;\n}\nfunction $7dd1ddf6834435ca$var$getBundleURL() {\n    try {\n        throw new Error();\n    } catch (err) {\n        var matches = (\"\" + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n        if (matches) // The first two stack frames will be this function and getBundleURLCached.\n        // Use the 3rd one, which will be a runtime in the original bundle.\n        return $7dd1ddf6834435ca$var$getBaseURL(matches[2]);\n    }\n    return \"/\";\n}\nfunction $7dd1ddf6834435ca$var$getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, \"$1\") + \"/\";\n}\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction $7dd1ddf6834435ca$var$getOrigin(url) {\n    var matches = (\"\" + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n    if (!matches) throw new Error(\"Origin not found\");\n    return matches[0];\n}\n$7dd1ddf6834435ca$export$bdfd709ae4826697 = $7dd1ddf6834435ca$var$getBundleURLCached;\n$7dd1ddf6834435ca$export$c9e73fbda7da57b6 = $7dd1ddf6834435ca$var$getBaseURL;\n$7dd1ddf6834435ca$export$5a759dc7a1cfb72a = $7dd1ddf6834435ca$var$getOrigin;\n\n});\n\nvar $524247d0bfda54e1$exports = {};\n\n(parcelRequire(\"iE7OH\")).register(JSON.parse('{\"7CtNK\":\"index.3924de9f.js\",\"d5jLp\":\"cursor.492cd7c0.png\",\"828Ln\":\"pastries.2a5816cb.png\",\"cm5z8\":\"font_pico8.b37ecd4f.png\",\"7T81E\":\"index.ad29baa8.js\"}'));\n\n\nvar $6MzNI = parcelRequire(\"6MzNI\");\nfunction $c15e63e86d3cb1d2$export$3c5f89dae98e900b(low_inclusive, high_exclusive) {\n    return low_inclusive + Math.floor(Math.random() * (high_exclusive - low_inclusive));\n}\nfunction $c15e63e86d3cb1d2$export$8960430cfd85939f(arr) {\n    if (arr.length === 0) return undefined;\n    return arr[$c15e63e86d3cb1d2$export$3249d46f03066cfe(arr)];\n}\nfunction $c15e63e86d3cb1d2$export$3249d46f03066cfe(arr) {\n    if (arr.length === 0) return undefined;\n    let res = 0;\n    let biggest = arr[0];\n    for(let k = 1; k < arr.length; k++)if (arr[k] > biggest) {\n        biggest = arr[k];\n        res = k;\n    }\n    return res;\n}\nfunction $c15e63e86d3cb1d2$export$3a89f8d6f6bf6c9f(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction $c15e63e86d3cb1d2$export$dff840edf10f285e(cur, target, max_delta) {\n    if (cur > target) return Math.max(cur - max_delta, target);\n    else if (cur < target) return Math.min(cur + max_delta, target);\n    else return target;\n}\nfunction $c15e63e86d3cb1d2$export$842a2cf37af977e1(n, m) {\n    return (n % m + m) % m;\n}\nfunction $c15e63e86d3cb1d2$export$aee1dbae5de2db9d(value, old_a, old_b, new_a, new_b) {\n    let t = (value - old_a) / (old_b - old_a);\n    return t * (new_b - new_a) + new_a;\n}\nfunction $c15e63e86d3cb1d2$export$94951fac5549ef77(arr) {\n    if (arr.length === 0) throw new Error(\"can't choose out of an empty array\");\n    return arr[Math.floor(Math.random() * arr.length)];\n}\nfunction $c15e63e86d3cb1d2$export$4053e36566dd3d9a(toZero, toOne, value) {\n    let x = Math.max(0, Math.min(1, (value - toZero) / (toOne - toZero)));\n    return x * x * (3 - 2 * x);\n}\nfunction $c15e63e86d3cb1d2$export$7d15b64cf5a3a4c4(value, min_inclusive, max_inclusive) {\n    return Math.max(min_inclusive, Math.min(max_inclusive, value));\n}\nfunction $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(value, min_inclusive, max_exclusive) {\n    return value >= min_inclusive && value < max_exclusive;\n}\nfunction $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(value, min_inclusive, max_exclusive) {\n    return value == min_inclusive || value + 1 === max_exclusive;\n}\nfunction $c15e63e86d3cb1d2$export$448332262467e042(array) {\n    let currentIndex = array.length, randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex != 0){\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex],\n            array[currentIndex]\n        ];\n    }\n    return array;\n}\nclass $c15e63e86d3cb1d2$export$b973696b5f65b53b {\n    constructor(x = 0.0, y = 0.0, z = 0.0, w = 0.0){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    static fromHex(hex_str) {\n        // from https://stackoverflow.com/a/5624139\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex_str);\n        if (result === null) throw new Error(`can't parse hex: ${hex_str}`);\n        return new $c15e63e86d3cb1d2$export$b973696b5f65b53b(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16), 255);\n    }\n    static #_ = (()=>{\n        this.zero = new $c15e63e86d3cb1d2$export$b973696b5f65b53b(0, 0, 0, 0);\n    })();\n    static #_1 = (()=>{\n        this.one = new $c15e63e86d3cb1d2$export$b973696b5f65b53b(1, 1, 1, 1);\n    })();\n}\nclass $c15e63e86d3cb1d2$export$ac4bca90992eed1 {\n    constructor(x = 0.0, y = 0.0){\n        this.x = x;\n        this.y = y;\n    }\n    toString() {\n        return `Vec2(${this.x}, ${this.y})`;\n    }\n    static #_ = (()=>{\n        // scratchpad vectors, meant to be reused as intermediate values without allocation\n        this.tmp = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_1 = (()=>{\n        this.tmp1 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_2 = (()=>{\n        this.tmp2 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_3 = (()=>{\n        this.tmp3 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_4 = (()=>{\n        this.zero = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_5 = (()=>{\n        this.one = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(1, 1);\n    })();\n    static set(v, x, y) {\n        v.x = x;\n        v.y = y;\n        return v;\n    }\n    static copy(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = v.x;\n        out.y = v.y;\n        return out;\n    }\n    static add(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        return out;\n    }\n    static sub(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x - b.x;\n        out.y = a.y - b.y;\n        return out;\n    }\n    static mul(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        return out;\n    }\n    static div(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x / b.x;\n        out.y = a.y / b.y;\n        return out;\n    }\n    static round(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = Math.round(v.x);\n        out.y = Math.round(v.y);\n        return out;\n    }\n    static negate(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = -v.x;\n        out.y = -v.y;\n        return out;\n    }\n    static scale(v, s, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = v.x * s;\n        out.y = v.y * s;\n        return out;\n    }\n    static lerp(a, b, t, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x * (1 - t) + b.x * t;\n        out.y = a.y * (1 - t) + b.y * t;\n        return out;\n    }\n    static inBounds(point, bounds) {\n        return $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(point.x, 0, bounds.x) && $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(point.y, 0, bounds.y);\n    }\n    // too niche for here?\n    static onBorder(point, bounds) {\n        return $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(point.x, 0, bounds.x) || $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(point.y, 0, bounds.y);\n    }\n    static isZero(v) {\n        return v.x === 0 && v.y === 0;\n    }\n    static equals(a, b) {\n        return a.x === b.x && a.y === b.y;\n    }\n    static map1(v, fn, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = fn(v.x);\n        out.y = fn(v.y);\n        return out;\n    }\n    static map2(a, b, fn, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = fn(a.x, b.x);\n        out.y = fn(a.y, b.y);\n        return out;\n    }\n    static roundToCardinal(a) {\n        if (Math.abs(a.x) >= Math.abs(a.y)) {\n            if (a.x >= 0) return \"xpos\";\n            else return \"xneg\";\n        } else {\n            if (a.y >= 0) return \"ypos\";\n            else return \"yneg\";\n        }\n    }\n}\nclass $c15e63e86d3cb1d2$export$4617fb02663045ef {\n    constructor(topLeft, size){\n        this.topLeft = topLeft;\n        this.size = size;\n    }\n    static fromParams(params) {\n        let topLeft = new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        let size = new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        if (params.topLeft !== undefined) {\n            $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.topLeft, topLeft);\n            if (params.size !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.size, size);\n            else if (params.bottomRight !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.bottomRight, topLeft, size);\n            else if (params.center !== undefined) {\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.center, topLeft, size);\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, 2, size);\n            } else throw new Error(\"not enough data to compute rect\");\n            return new $c15e63e86d3cb1d2$export$4617fb02663045ef(topLeft, size);\n        } else if (params.center !== undefined) {\n            if (params.size !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.size, size);\n            else if (params.bottomRight !== undefined) {\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.bottomRight, params.center, size);\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, 2, size);\n            } else throw new Error(\"not enough data to compute rect\");\n            $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.center, $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, .5), topLeft);\n            return new $c15e63e86d3cb1d2$export$4617fb02663045ef(topLeft, size);\n        } else throw new Error(\"unimplemented\");\n    }\n}\n\n\n// knexator's canvas\n\nvar $6MzNI = parcelRequire(\"6MzNI\");\n\nfunction $c3915434cc9c6cd1$export$908a73ac1ff4f674(canvas_selector) {\n    const canvas = document.querySelector(canvas_selector);\n    // Assumption 1: the canvas itself is always opaque.\n    const gl = canvas.getContext(\"webgl2\", {\n        alpha: false\n    });\n    // Assumption 2: shader output isn't premultiplied \n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    // Assumption 3: use this default background color\n    gl.clearColor(0.5, 0.5, 0.75, 1.0);\n    // Assumption 4: canvas inner size is the same as display size\n    $6MzNI.resizeCanvasToDisplaySize(canvas);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    return gl;\n}\nfunction $c3915434cc9c6cd1$export$1c49b8da622c8ecb(gl) {\n    let canvas = gl.canvas;\n    return new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(canvas.clientWidth, canvas.clientHeight);\n}\nclass $c3915434cc9c6cd1$export$efb53073f026782 {\n    constructor(size, data){\n        this.size = size;\n        if (data === undefined) this.data = new Uint8ClampedArray(size.x * size.y * 4);\n        else this.data = data;\n    }\n}\nfunction $c3915434cc9c6cd1$export$c88c4e8a1b146236(url) {\n    return new Promise((resolve, reject)=>{\n        const img = new Image();\n        img.crossOrigin = \"Anonymous\"; // to avoid CORS if used with Canvas\n        img.src = url;\n        img.onload = ()=>{\n            resolve(img);\n        };\n        img.onerror = (e)=>{\n            reject(e);\n        };\n    });\n}\nfunction $c3915434cc9c6cd1$export$504877af11773df9(img) {\n    let canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    return ctx;\n}\nfunction $c3915434cc9c6cd1$export$6a13b43690c3cbc9(ctx) {\n    let data = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height).data;\n    return new $c3915434cc9c6cd1$export$efb53073f026782(new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(ctx.canvas.width, ctx.canvas.height), data);\n}\nasync function $c3915434cc9c6cd1$export$b3460eb5f8fb3460(url) {\n    return $c3915434cc9c6cd1$export$6a13b43690c3cbc9($c3915434cc9c6cd1$export$504877af11773df9(await $c3915434cc9c6cd1$export$c88c4e8a1b146236(url)));\n}\n\n\nfunction $e28a0cada894885c$export$9f0c37400c701bee(n, callback) {\n    let result = Array(n);\n    for(let k = 0; k < n; k++)result[k] = callback(k);\n    return result;\n}\nfunction $e28a0cada894885c$export$f01e84010c13cebe(lo, hi, callback) {\n    let count = hi - lo;\n    let result = Array(count);\n    for(let k = 0; k < count; k++)result[k] = callback(k + lo);\n    return result;\n}\nfunction* $e28a0cada894885c$export$8901015135f2fb22(...arrays) {\n    let iterators = arrays.map((a)=>a[Symbol.iterator]());\n    while(true){\n        let nexts = iterators.map((a)=>a.next());\n        let done = nexts.some((n)=>n.done);\n        if (done) return;\n        yield nexts.map((n)=>n.value);\n    }\n}\nfunction $e28a0cada894885c$export$58aefef1ff9edd34(object, map_fn) {\n    let result = {};\n    for (let [k, v] of Object.entries(object))result[k] = map_fn(v);\n    return result;\n}\nclass $e28a0cada894885c$export$9341a022b2e0184a {\n    constructor(init_fn){\n        // typing doesn't work :(\n        let target = {};\n        return new Proxy(target, {\n            get: (target, name)=>{\n                if (name in target) return target[name];\n                else {\n                    target[name] = init_fn();\n                    return target[name];\n                }\n            }\n        });\n    }\n}\n\n\n////////////////////////////////\n//****************************//\n// Tiny 2D array library\nclass $f5972199cc150eb4$export$f89c48f5ee9bfddf {\n    // 0 1 2\n    // 3 4 5\n    // 6 7 8\n    constructor(width, height, data){\n        this.width = width;\n        this.height = height;\n        this.data = data;\n    }\n    get(i, j, outOfBounds) {\n        if (!this.inBounds(i, j)) {\n            if (arguments.length === 3) return outOfBounds;\n            throw new Error(`get at (${i}, ${j}) was out of bounds, and no default argument was given`);\n        }\n        return this.data[i + j * this.width];\n    }\n    getV(pos, outOfBounds) {\n        if (arguments.length === 2) return this.get(pos.x, pos.y, outOfBounds);\n        else return this.get(pos.x, pos.y);\n    }\n    set(i, j, value) {\n        if (!this.inBounds(i, j)) throw new Error(`can't set at (${i}, ${j}); out of bounds`);\n        this.data[i + j * this.width] = value;\n    }\n    setV(pos, value) {\n        return this.set(pos.x, pos.y, value);\n    }\n    inBounds(i, j) {\n        return i >= 0 && i < this.width && j >= 0 && j < this.height;\n    }\n    inBoundsV(pos) {\n        return this.inBounds(pos.x, pos.y);\n    }\n    forEach(callback) {\n        for(let i = 0; i < this.width; i++)for(let j = 0; j < this.height; j++)callback(i, j, this.data[i + j * this.width]);\n    }\n    forEachV(callback) {\n        for(let i = 0; i < this.width; i++)for(let j = 0; j < this.height; j++)callback({\n            x: i,\n            y: j\n        }, this.data[i + j * this.width]);\n    }\n    filter(discriminator) {\n        let result = [];\n        for(let i = 0; i < this.width; i++){\n            for(let j = 0; j < this.height; j++)if (discriminator(i, j, this.data[i + j * this.width])) result.push(this.data[i + j * this.width]);\n        }\n        return result;\n    }\n    static init(width, height, fillFunc) {\n        let buffer = [];\n        for(let j = 0; j < height; j++)for(let i = 0; i < width; i++)buffer.push(fillFunc(i, j));\n        return new $f5972199cc150eb4$export$f89c48f5ee9bfddf(width, height, buffer);\n    }\n    static initV(size, fillFunc) {\n        let buffer = [];\n        for(let j = 0; j < size.y; j++)for(let i = 0; i < size.x; i++)buffer.push(fillFunc({\n            x: i,\n            y: j\n        }));\n        return new $f5972199cc150eb4$export$f89c48f5ee9bfddf(size.x, size.y, buffer);\n    }\n} //****************************//\n ////////////////////////////////\n\n\nfunction $ec62c306e2a0e589$var$setPixel(patch, p, col) {\n    let base_index = 4 * (Math.round(p.x) + Math.round(p.y) * patch.size.x);\n    patch.data[base_index + 0] = col.x;\n    patch.data[base_index + 1] = col.y;\n    patch.data[base_index + 2] = col.z;\n    patch.data[base_index + 3] = col.w;\n}\nfunction $ec62c306e2a0e589$var$getPixel(patch, p) {\n    let base_index = 4 * (Math.round(p.x) + Math.round(p.y) * patch.size.x);\n    return new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(patch.data[base_index + 0], patch.data[base_index + 1], patch.data[base_index + 2], patch.data[base_index + 3]);\n}\nfunction $ec62c306e2a0e589$var$drawLine(patch, a, b, col) {\n    (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).round(a, a);\n    (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).round(b, b);\n    let dx = Math.abs(b.x - a.x);\n    let sx = a.x < b.x ? 1 : -1;\n    let dy = -Math.abs(b.y - a.y);\n    let sy = a.y < b.y ? 1 : -1;\n    let error = dx + dy;\n    while(true){\n        $ec62c306e2a0e589$var$setPixel(patch, a, col);\n        if ((0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).equals(a, b)) break;\n        let e2 = 2 * error;\n        if (e2 >= dy) {\n            if (a.x === b.x) break;\n            error += dy;\n            a.x += sx;\n        }\n        if (e2 <= dx) {\n            if (a.y === b.y) break;\n            error += dx;\n            a.y += sy;\n        }\n    }\n}\nfunction $ec62c306e2a0e589$var$drawFunction(patch, fn) {\n    let pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n    for(let j = 0; j < patch.size.y; j++)for(let i = 0; i < patch.size.x; i++){\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).set(pos, i, j);\n        let result = fn(pos);\n        $ec62c306e2a0e589$var$setPixel(patch, pos, result);\n    }\n}\nfunction $ec62c306e2a0e589$var$blit(dst, src, pos, combine_fn) {\n    let src_pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n    let dst_pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n    for(let j = 0; j < src.size.y; j++)for(let i = 0; i < src.size.x; i++){\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).set(src_pos, i, j);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(pos, src_pos, dst_pos);\n        if (!(0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).inBounds(dst_pos, dst.size)) continue;\n        let src_pixel = $ec62c306e2a0e589$var$getPixel(src, src_pos);\n        let dst_pixel = $ec62c306e2a0e589$var$getPixel(dst, dst_pos);\n        let new_pixel = combine_fn(dst_pixel, src_pixel);\n        $ec62c306e2a0e589$var$setPixel(dst, dst_pos, new_pixel);\n    }\n}\nfunction $ec62c306e2a0e589$var$extract(src, top_left, size) {\n    let dst = new (0, $c3915434cc9c6cd1$export$efb53073f026782)(size);\n    let src_pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n    let dst_pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n    for(let j = 0; j < size.y; j++)for(let i = 0; i < size.x; i++){\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).set(dst_pos, i, j);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(top_left, dst_pos, src_pos);\n        let cur_pixel = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).inBounds(src_pos, src.size) ? $ec62c306e2a0e589$var$getPixel(src, src_pos) : new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(0, 0, 0, 0);\n        $ec62c306e2a0e589$var$setPixel(dst, dst_pos, cur_pixel);\n    }\n    return dst;\n}\nfunction $ec62c306e2a0e589$var$splitSpritesheet(src, count, margin = 0) {\n    let result = [];\n    // compute how much space there is left after removing margins\n    let usable_space = margin === 0 ? src.size : (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).sub(src.size, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).scale((0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(count, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).one), margin));\n    let spr_size = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).div(usable_space, count);\n    if (!Number.isInteger(spr_size.x) || !Number.isInteger(spr_size.y)) throw new Error(`Can't extract ${count} sprites from a texture of size ${src.size} and a margin between sprites of ${margin}; each sprite would have a non-fractional size of ${spr_size}`);\n    let cur_top_left = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(margin, margin);\n    for(let sj = 0; sj < count.y; sj++){\n        for(let si = 0; si < count.x; si++){\n            result.push($ec62c306e2a0e589$var$extract(src, cur_top_left, spr_size));\n            cur_top_left.x += spr_size.x + margin;\n        }\n        cur_top_left.x = margin;\n        cur_top_left.y += spr_size.y + margin;\n    }\n    return result;\n}\nconst $ec62c306e2a0e589$var$alphaMask = (dst, src)=>src.w === 0 ? dst : src;\nvar $e3784ee9d7d2dade$exports = {};\n\n\n$e3784ee9d7d2dade$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"7CtNK\") + \"../\" + (parcelRequire(\"iE7OH\")).resolve(\"d5jLp\");\n\n\nvar $848e9fc91914b666$exports = {};\n\n\n$848e9fc91914b666$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"7CtNK\") + \"../\" + (parcelRequire(\"iE7OH\")).resolve(\"828Ln\");\n\n\nvar $d46c59f72bd91640$exports = {};\n\n\n$d46c59f72bd91640$exports = (parcelRequire(\"aNJCr\")).getBundleURL(\"7CtNK\") + \"../\" + (parcelRequire(\"iE7OH\")).resolve(\"cm5z8\");\n\n\nasync function $ec62c306e2a0e589$var$main() {\n    let screen = new (0, $c3915434cc9c6cd1$export$efb53073f026782)(new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(128, 128));\n    let cursor_sprite = await (0, $c3915434cc9c6cd1$export$b3460eb5f8fb3460)(new URL($e3784ee9d7d2dade$exports).toString());\n    let pastries_atlas = await (0, $c3915434cc9c6cd1$export$b3460eb5f8fb3460)(new URL($848e9fc91914b666$exports).toString());\n    let font_atlas = await (0, $c3915434cc9c6cd1$export$b3460eb5f8fb3460)(new URL($d46c59f72bd91640$exports).toString());\n    let _font_sprites = $ec62c306e2a0e589$var$splitSpritesheet(font_atlas, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(16, 4), 1);\n    let _font_letters = `ABCDEFGHIJKLMNOPQRSTUVWXYZ()[]{}0123456789+-*/.,:;<>=?\"#$%&!@^_~`;\n    let font_sprites = Object.fromEntries((0, $e28a0cada894885c$export$8901015135f2fb22)(_font_letters, _font_sprites));\n    let font_outline_sprites = (0, $e28a0cada894885c$export$58aefef1ff9edd34)(font_sprites, (char_spr)=>{\n        let result = new (0, $c3915434cc9c6cd1$export$efb53073f026782)((0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(char_spr.size, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(2, 2)));\n        const neighs = [\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(-1, -1),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(0, -1),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, -1),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(-1, 0),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, 0),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(-1, 1),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(0, 1),\n            new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, 1)\n        ];\n        let neigh_pos = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)();\n        $ec62c306e2a0e589$var$drawFunction(result, (pos)=>{\n            let any_neigh = neighs.some((delta)=>{\n                (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(pos, delta, neigh_pos);\n                (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).sub(neigh_pos, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).one, neigh_pos);\n                if ((0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).inBounds(neigh_pos, char_spr.size)) return $ec62c306e2a0e589$var$getPixel(char_spr, neigh_pos).w > 0;\n                else return false;\n            });\n            return any_neigh ? (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).one : (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).zero;\n        });\n        return result;\n    });\n    function printLine(text, top_left, color) {\n        let cur_top_left = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).copy(top_left);\n        for (let char of text){\n            if (char !== \" \") {\n                if (!(char in font_sprites)) throw new Error(`char ${char} not avaliable on atlas`);\n                $ec62c306e2a0e589$var$blit(screen, font_sprites[char], cur_top_left, $ec62c306e2a0e589$var$alphaMask);\n            }\n            cur_top_left.x += 4;\n        }\n    }\n    function printLineOutlined(text, top_left, text_color, outline_color) {\n        let cur_top_left = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).sub(top_left, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, 1));\n        for (let char of text){\n            if (char !== \" \") {\n                if (!(char in font_sprites)) throw new Error(`char ${char} not avaliable on atlas`);\n                $ec62c306e2a0e589$var$blit(screen, font_outline_sprites[char], cur_top_left, $ec62c306e2a0e589$var$alphaMask);\n            // draw here or at the end?\n            // blit(screen, font_sprites[char], Vec2.add(cur_top_left, new Vec2(1, 1)), (dst_color, src_color) => src_color.w === 0 ? dst_color : text_color);\n            }\n            cur_top_left.x += 4;\n        }\n        printLine(text, top_left, text_color);\n    }\n    let pastries = $ec62c306e2a0e589$var$splitSpritesheet(pastries_atlas, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(8, 2));\n    let sprite = pastries[2];\n    // let sprite = extract(pastries_atlas, new Vec2(0, 0), new Vec2(16, 16));\n    // init\n    const gl = (0, $c3915434cc9c6cd1$export$908a73ac1ff4f674)(\"#c\");\n    gl.canvas.width = screen.size.x;\n    gl.canvas.height = screen.size.y;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    let screen_texture = $6MzNI.createTexture(gl, {\n        mag: gl.NEAREST,\n        min: gl.LINEAR,\n        format: gl.RGBA,\n        width: screen.size.x,\n        height: screen.size.y,\n        type: gl.UNSIGNED_BYTE,\n        src: screen.data\n    });\n    // draw a texture\n    const program_info = $6MzNI.createProgramInfo(gl, [\n        // vs\n        `#version 300 es\r\n\r\n    in vec2 a_pos;\r\n    in vec2 a_uv;\r\n\r\n    out vec2 v_uv;\r\n\r\n    void main() {\r\n        v_uv = a_uv;\r\n        gl_Position = vec4(a_pos, 0.0, 1.0);\r\n    }\r\n    `,\n        // fs\n        `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec2 v_uv;\r\n    \r\n    uniform sampler2D u_tex;\r\n\r\n    out vec4 out_color;\r\n    void main() {\r\n        out_color = texture(u_tex, v_uv);\r\n    }\r\n    `\n    ]);\n    // single full screen quad \n    const buffer_info = $6MzNI.createBufferInfoFromArrays(gl, {\n        a_pos: {\n            data: [\n                // tri 1, top left\n                -1,\n                -1,\n                1.0,\n                1.0,\n                -1,\n                1.0,\n                // tri 2, bot right\n                -1,\n                -1,\n                1.0,\n                -1,\n                1.0,\n                1.0\n            ],\n            numComponents: 2\n        },\n        a_uv: {\n            data: [\n                // tri 1, top left\n                0.0,\n                1.0,\n                1.0,\n                0.0,\n                0.0,\n                0.0,\n                // tri 2, bot right\n                0.0,\n                1.0,\n                1.0,\n                1.0,\n                1.0,\n                0.0\n            ],\n            numComponents: 2\n        }\n    });\n    const vao_info = $6MzNI.createVertexArrayInfo(gl, program_info, buffer_info);\n    let mouse_state = {\n        cur_pos: new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(0, 0)\n    };\n    window.addEventListener(\"mousemove\", (ev)=>{\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).set(mouse_state.cur_pos, ev.clientX, ev.clientY);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).div(mouse_state.cur_pos, (0, $c3915434cc9c6cd1$export$1c49b8da622c8ecb)(gl), mouse_state.cur_pos);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).mul(mouse_state.cur_pos, screen.size, mouse_state.cur_pos);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).map1(mouse_state.cur_pos, (x)=>Math.floor(x), mouse_state.cur_pos);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).map2(mouse_state.cur_pos, screen.size, (m, s)=>(0, $c15e63e86d3cb1d2$export$7d15b64cf5a3a4c4)(m, 0, s - 1), mouse_state.cur_pos);\n    });\n    let keyboard_state = new (0, $e28a0cada894885c$export$9341a022b2e0184a)(()=>{\n        return {\n            cur_pressed: false,\n            prev_pressed: false\n        };\n    });\n    window.addEventListener(\"keydown\", (ev)=>{\n        keyboard_state[ev.code].cur_pressed = true;\n    });\n    window.addEventListener(\"keyup\", (ev)=>{\n        keyboard_state[ev.code].cur_pressed = false;\n    });\n    function update_keyboard_state() {\n        for(const k in keyboard_state)keyboard_state[k].prev_pressed = keyboard_state[k].cur_pressed;\n    }\n    function keyJustPressed(key) {\n        return keyboard_state[key].cur_pressed && !keyboard_state[key].prev_pressed;\n    }\n    // function inputAxis(neg_keys: string[], pos_keys: string[]) {\n    //     let result = 0;\n    //     if (neg_keys.some(k => keyJustPressed(k))) result -= 1;\n    //     if (pos_keys.some(k => keyJustPressed(k))) result += 1;\n    //     return result;\n    // }\n    function genericAxis(neg, pos) {\n        return neg ? pos ? 0 : -1 : pos ? 1 : 0;\n    }\n    function stepMovementInput() {\n        return new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(genericAxis([\n            \"ArrowLeft\",\n            \"KeyA\"\n        ].some(keyJustPressed), [\n            \"ArrowRight\",\n            \"KeyD\"\n        ].some(keyJustPressed)), genericAxis([\n            \"ArrowUp\",\n            \"KeyW\"\n        ].some(keyJustPressed), [\n            \"ArrowDown\",\n            \"KeyS\"\n        ].some(keyJustPressed)));\n    }\n    const BOARD_SIZE = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(4, 4);\n    const N_PASTRIES = 4;\n    let board_state = (0, $f5972199cc150eb4$export$f89c48f5ee9bfddf).initV(BOARD_SIZE, (p)=>(0, $c15e63e86d3cb1d2$export$3c5f89dae98e900b)(0, N_PASTRIES));\n    let cursor_tile = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(0, 0);\n    const TILE_SIZE = new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(18, 16);\n    let tile_background = new (0, $c3915434cc9c6cd1$export$efb53073f026782)(TILE_SIZE);\n    $ec62c306e2a0e589$var$drawFunction(tile_background, (pos)=>{\n        if ((0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).onBorder(pos, TILE_SIZE)) return (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).zero;\n        else {\n            // on a corner of the inner rect?\n            if ((0, $c15e63e86d3cb1d2$export$66124ef7f3a58cb4)(pos.x, 1, TILE_SIZE.x - 1) && (0, $c15e63e86d3cb1d2$export$66124ef7f3a58cb4)(pos.y, 1, TILE_SIZE.y - 1)) return (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).zero;\n            else return (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).fromHex(\"#C2C3C7\");\n        }\n    });\n    let last_time = 0;\n    function update(cur_time) {\n        // stats.update();\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        // game logic\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(cursor_tile, stepMovementInput(), cursor_tile);\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).map2(cursor_tile, BOARD_SIZE, (v, s)=>(0, $c15e63e86d3cb1d2$export$7d15b64cf5a3a4c4)(v, 0, s - 1), cursor_tile);\n        // visuals\n        $ec62c306e2a0e589$var$drawFunction(screen, (pos)=>{\n            let c = (pos.x ^ pos.y) % 256;\n            return new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(c, c, c, 255);\n        });\n        $ec62c306e2a0e589$var$blit(screen, sprite, mouse_state.cur_pos, (dst, src)=>src.w < 128 ? dst : src);\n        $ec62c306e2a0e589$var$drawLine(screen, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(64, 64), mouse_state.cur_pos, new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(255, 0, 0, 255));\n        let text = \"HELLO WORLD!\";\n        printLineOutlined(text, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(Math.sin(cur_time * .005) * 30 + 64 - text.length * 2, 22), new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(255, 128, 255, 255), new (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b)(128, 0, 128, 255));\n        // printLineOutlined(text, new Vec2(Math.sin(cur_time) + 64 - , 64), new Vec4(255, 128, 255, 255), new Vec4(128, 0, 128, 255));\n        let tiles_top_left = (0, $c15e63e86d3cb1d2$export$4617fb02663045ef).fromParams({\n            center: new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(64, 64),\n            size: (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).mul(BOARD_SIZE, TILE_SIZE)\n        }).topLeft;\n        board_state.forEachV((index, pastry)=>{\n            let tile_top_left = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tiles_top_left, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).mul(index, TILE_SIZE));\n            let selected = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).equals(index, cursor_tile);\n            if (!selected) {\n                $ec62c306e2a0e589$var$blit(screen, tile_background, tile_top_left, $ec62c306e2a0e589$var$alphaMask);\n                let color_shadow = (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).fromHex(\"#83769C\");\n                $ec62c306e2a0e589$var$blit(screen, pastries[pastry], (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tile_top_left, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, 0)), (dst, src)=>src.w > 0 ? color_shadow : dst);\n                $ec62c306e2a0e589$var$blit(screen, pastries[pastry], (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tile_top_left, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, -1)), $ec62c306e2a0e589$var$alphaMask);\n            } else {\n                let color_tilebg_active = (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).fromHex(\"#FF77A8\");\n                $ec62c306e2a0e589$var$blit(screen, tile_background, tile_top_left, (dst, src)=>src.w > 0 ? color_tilebg_active : dst);\n                let color_shadow_active = (0, $c15e63e86d3cb1d2$export$b973696b5f65b53b).fromHex(\"#FF004D\");\n                $ec62c306e2a0e589$var$blit(screen, pastries[pastry], (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tile_top_left, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, 0)), (dst, src)=>src.w > 0 ? color_shadow_active : dst);\n                $ec62c306e2a0e589$var$blit(screen, pastries[pastry], (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tile_top_left, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(1, Math.sin(cur_time * .01) - 2)), $ec62c306e2a0e589$var$alphaMask);\n            }\n        });\n        let cursor_pos = (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(tiles_top_left, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).mul(cursor_tile, TILE_SIZE));\n        (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).add(cursor_pos, new (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1)(14, 12), cursor_pos);\n        if ((0, $c15e63e86d3cb1d2$export$842a2cf37af977e1)(cur_time, 800) > 650) (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).sub(cursor_pos, (0, $c15e63e86d3cb1d2$export$ac4bca90992eed1).one, cursor_pos);\n        $ec62c306e2a0e589$var$blit(screen, cursor_sprite, cursor_pos, $ec62c306e2a0e589$var$alphaMask);\n        $6MzNI.setTextureFromArray(gl, screen_texture, screen.data);\n        gl.useProgram(program_info.program);\n        // Set the VAO (single gl call)\n        $6MzNI.setBuffersAndAttributes(gl, program_info, vao_info);\n        $6MzNI.setUniformsAndBindTextures(program_info, {\n            u_tex: screen_texture\n        });\n        $6MzNI.drawBufferInfo(gl, buffer_info);\n        update_keyboard_state();\n        requestAnimationFrame(update);\n    }\n    requestAnimationFrame(update);\n}\n$ec62c306e2a0e589$var$main();\n\n})();\n//# sourceMappingURL=index.3924de9f.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7CtNK\\\":\\\"index.3924de9f.js\\\",\\\"d5jLp\\\":\\\"cursor.492cd7c0.png\\\",\\\"828Ln\\\":\\\"pastries.2a5816cb.png\\\",\\\"cm5z8\\\":\\\"font_pico8.b37ecd4f.png\\\",\\\"7T81E\\\":\\\"index.ad29baa8.js\\\"}\"));","import * as twgl from \"twgl.js\";\r\nimport { Rectangle, Vec2, Vec4, clamp, mod, onBorder, randomInt } from \"../kommon/math\";\r\nimport { Patch, clientSize, initFromSelector, patchFromUrl } from \"../kommon/kanvas\";\r\nimport { DefaultDict, fromCount, objectMap, zip } from \"../kommon/kommon\";\r\nimport { Grid2D } from \"../kommon/grid2D\";\r\n\r\nfunction setPixel(patch: Patch, p: Vec2, col: Vec4) {\r\n    let base_index = 4 * (Math.round(p.x) + Math.round(p.y) * patch.size.x);\r\n    patch.data[base_index + 0] = col.x;\r\n    patch.data[base_index + 1] = col.y;\r\n    patch.data[base_index + 2] = col.z;\r\n    patch.data[base_index + 3] = col.w;\r\n}\r\n\r\nfunction getPixel(patch: Patch, p: Vec2): Vec4 {\r\n    let base_index = 4 * (Math.round(p.x) + Math.round(p.y) * patch.size.x);\r\n    return new Vec4(\r\n        patch.data[base_index + 0],\r\n        patch.data[base_index + 1],\r\n        patch.data[base_index + 2],\r\n        patch.data[base_index + 3],\r\n    );\r\n}\r\n\r\nfunction drawLine(patch: Patch, a: Vec2, b: Vec2, col: Vec4) {\r\n    Vec2.round(a, a);\r\n    Vec2.round(b, b);\r\n\r\n    let dx = Math.abs(b.x - a.x);\r\n    let sx = a.x < b.x ? 1 : -1\r\n    let dy = -Math.abs(b.y - a.y)\r\n    let sy = a.y < b.y ? 1 : -1\r\n    let error = dx + dy\r\n\r\n    while (true) {\r\n        setPixel(patch, a, col);\r\n        if (Vec2.equals(a, b)) {\r\n            break;\r\n        }\r\n        let e2 = 2 * error\r\n        if (e2 >= dy) {\r\n            if (a.x === b.x) {\r\n                break;\r\n            }\r\n            error += dy;\r\n            a.x += sx;\r\n        }\r\n        if (e2 <= dx) {\r\n            if (a.y === b.y) {\r\n                break;\r\n            }\r\n            error += dx;\r\n            a.y += sy;\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawFunction(patch: Patch, fn: (pos: Vec2) => Vec4) {\r\n    let pos = new Vec2();\r\n    for (let j = 0; j < patch.size.y; j++) {\r\n        for (let i = 0; i < patch.size.x; i++) {\r\n            Vec2.set(pos, i, j);\r\n            let result = fn(pos);\r\n            setPixel(patch, pos, result);\r\n        }\r\n    }\r\n}\r\n\r\nfunction blit(dst: Patch, src: Patch, pos: Vec2, combine_fn: (dst_color: Vec4, src_color: Vec4) => Vec4) {\r\n    let src_pos = new Vec2();\r\n    let dst_pos = new Vec2();\r\n    for (let j = 0; j < src.size.y; j++) {\r\n        for (let i = 0; i < src.size.x; i++) {\r\n            Vec2.set(src_pos, i, j);\r\n            Vec2.add(pos, src_pos, dst_pos);\r\n            if (!Vec2.inBounds(dst_pos, dst.size)) {\r\n                continue;\r\n            }\r\n            let src_pixel = getPixel(src, src_pos);\r\n            let dst_pixel = getPixel(dst, dst_pos);\r\n            let new_pixel = combine_fn(dst_pixel, src_pixel);\r\n            setPixel(dst, dst_pos, new_pixel);\r\n        }\r\n    }\r\n}\r\n\r\nfunction extract(src: Patch, top_left: Vec2, size: Vec2): Patch {\r\n    let dst = new Patch(size);\r\n\r\n    let src_pos = new Vec2();\r\n    let dst_pos = new Vec2();\r\n    for (let j = 0; j < size.y; j++) {\r\n        for (let i = 0; i < size.x; i++) {\r\n            Vec2.set(dst_pos, i, j);\r\n            Vec2.add(top_left, dst_pos, src_pos);\r\n            let cur_pixel = Vec2.inBounds(src_pos, src.size) ?\r\n                getPixel(src, src_pos) : new Vec4(0, 0, 0, 0);\r\n            setPixel(dst, dst_pos, cur_pixel);\r\n        }\r\n    }\r\n    return dst;\r\n}\r\n\r\nfunction splitSpritesheet(src: Patch, count: Vec2, margin: number = 0): Patch[] {\r\n    let result: Patch[] = [];\r\n    // compute how much space there is left after removing margins\r\n    let usable_space = (margin === 0) ? src.size : Vec2.sub(src.size, Vec2.scale(Vec2.add(count, Vec2.one), margin));\r\n    let spr_size = Vec2.div(usable_space, count);\r\n    if (!Number.isInteger(spr_size.x) || !Number.isInteger(spr_size.y)) {\r\n        throw new Error(`Can't extract ${count} sprites from a texture of size ${src.size} and a margin between sprites of ${margin}; each sprite would have a non-fractional size of ${spr_size}`);\r\n    }\r\n    let cur_top_left = new Vec2(margin, margin);\r\n    for (let sj = 0; sj < count.y; sj++) {\r\n        for (let si = 0; si < count.x; si++) {\r\n            result.push(extract(src, cur_top_left, spr_size));\r\n            cur_top_left.x += spr_size.x + margin;\r\n        }\r\n        cur_top_left.x = margin;\r\n        cur_top_left.y += spr_size.y + margin;\r\n    }\r\n    return result;\r\n}\r\n\r\nconst alphaMask = (dst: Vec4, src: Vec4) => src.w === 0 ? dst : src;\r\n\r\nasync function main() {\r\n    let screen = new Patch(new Vec2(128, 128));\r\n    let cursor_sprite = await patchFromUrl((new URL('cursor.png', import.meta.url)).toString());\r\n    let pastries_atlas = await patchFromUrl((new URL('pastries.png', import.meta.url)).toString());\r\n    let font_atlas = await patchFromUrl((new URL('font_pico8.png', import.meta.url)).toString());\r\n    let _font_sprites = splitSpritesheet(font_atlas, new Vec2(16, 4), 1);\r\n    let _font_letters = `ABCDEFGHIJKLMNOPQRSTUVWXYZ()[]{}0123456789+-*/.,:;<>=?\"#$%&!@^_~`;\r\n    let font_sprites: Record<string, Patch> = Object.fromEntries(zip(_font_letters, _font_sprites));\r\n\r\n    let font_outline_sprites = objectMap(font_sprites, char_spr => {\r\n        let result = new Patch(Vec2.add(char_spr.size, new Vec2(2, 2)));\r\n        const neighs = [new Vec2(-1, -1), new Vec2(0, -1), new Vec2(1, -1), new Vec2(-1, 0), new Vec2(1, 0), new Vec2(-1, 1), new Vec2(0, 1), new Vec2(1, 1)];\r\n        let neigh_pos = new Vec2();\r\n        drawFunction(result, pos => {\r\n            let any_neigh = neighs.some(delta => {\r\n                Vec2.add(pos, delta, neigh_pos);\r\n                Vec2.sub(neigh_pos, Vec2.one, neigh_pos);\r\n                if (Vec2.inBounds(neigh_pos, char_spr.size)) {\r\n                    return getPixel(char_spr, neigh_pos).w > 0;\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n            return any_neigh ? Vec4.one : Vec4.zero;\r\n        });\r\n        return result;\r\n    })\r\n\r\n    function printLine(text: string, top_left: Vec2, color: Vec4) {\r\n        let cur_top_left = Vec2.copy(top_left);\r\n        for (let char of text) {\r\n            if (char !== ' ') {\r\n                if (!(char in font_sprites)) {\r\n                    throw new Error(`char ${char} not avaliable on atlas`);\r\n                }\r\n                blit(screen, font_sprites[char], cur_top_left, alphaMask);\r\n            }\r\n            cur_top_left.x += 4;\r\n        }\r\n    }\r\n\r\n    function printLineOutlined(text: string, top_left: Vec2, text_color: Vec4, outline_color: Vec4) {\r\n        let cur_top_left = Vec2.sub(top_left, new Vec2(1, 1));\r\n        for (let char of text) {\r\n            if (char !== ' ') {\r\n                if (!(char in font_sprites)) {\r\n                    throw new Error(`char ${char} not avaliable on atlas`);\r\n                }\r\n                blit(screen, font_outline_sprites[char], cur_top_left, alphaMask);\r\n                // draw here or at the end?\r\n                // blit(screen, font_sprites[char], Vec2.add(cur_top_left, new Vec2(1, 1)), (dst_color, src_color) => src_color.w === 0 ? dst_color : text_color);\r\n            }\r\n            cur_top_left.x += 4;\r\n        }\r\n        printLine(text, top_left, text_color);\r\n    }\r\n\r\n\r\n    let pastries = splitSpritesheet(pastries_atlas, new Vec2(8, 2));\r\n    let sprite = pastries[2];\r\n    // let sprite = extract(pastries_atlas, new Vec2(0, 0), new Vec2(16, 16));\r\n\r\n    // init\r\n    const gl = initFromSelector(\"#c\");\r\n    gl.canvas.width = screen.size.x;\r\n    gl.canvas.height = screen.size.y;\r\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\r\n    let screen_texture = twgl.createTexture(gl, {\r\n        mag: gl.NEAREST,\r\n        min: gl.LINEAR,\r\n        format: gl.RGBA,\r\n        width: screen.size.x,\r\n        height: screen.size.y,\r\n        type: gl.UNSIGNED_BYTE,\r\n        src: screen.data,\r\n    });\r\n\r\n    // draw a texture\r\n    const program_info = twgl.createProgramInfo(gl, [\r\n        // vs\r\n        `#version 300 es\r\n\r\n    in vec2 a_pos;\r\n    in vec2 a_uv;\r\n\r\n    out vec2 v_uv;\r\n\r\n    void main() {\r\n        v_uv = a_uv;\r\n        gl_Position = vec4(a_pos, 0.0, 1.0);\r\n    }\r\n    `,\r\n        // fs\r\n        `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec2 v_uv;\r\n    \r\n    uniform sampler2D u_tex;\r\n\r\n    out vec4 out_color;\r\n    void main() {\r\n        out_color = texture(u_tex, v_uv);\r\n    }\r\n    `\r\n    ]);\r\n\r\n    // single full screen quad \r\n    const buffer_info = twgl.createBufferInfoFromArrays(gl, {\r\n        a_pos: {\r\n            data: [\r\n                // tri 1, top left\r\n                -1.0, -1.0,\r\n                1.0, 1.0,\r\n                -1.0, 1.0,\r\n                // tri 2, bot right\r\n                -1.0, -1.0,\r\n                1.0, -1.0,\r\n                1.0, 1.0,\r\n            ],\r\n            numComponents: 2,\r\n            // stride, offset, etc. if needed\r\n        },\r\n        a_uv: {\r\n            data: [\r\n                // tri 1, top left\r\n                0.0, 1.0,\r\n                1.0, 0.0,\r\n                0.0, 0.0,\r\n                // tri 2, bot right\r\n                0.0, 1.0,\r\n                1.0, 1.0,\r\n                1.0, 0.0,\r\n            ],\r\n            numComponents: 2,\r\n            // stride, offset, etc. if needed\r\n        },\r\n    });\r\n    const vao_info = twgl.createVertexArrayInfo(gl, program_info, buffer_info);\r\n\r\n    let mouse_state = {\r\n        cur_pos: new Vec2(0, 0),\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", ev => {\r\n        Vec2.set(mouse_state.cur_pos, ev.clientX, ev.clientY);\r\n        Vec2.div(mouse_state.cur_pos, clientSize(gl), mouse_state.cur_pos);\r\n        Vec2.mul(mouse_state.cur_pos, screen.size, mouse_state.cur_pos);\r\n        Vec2.map1(mouse_state.cur_pos, x => Math.floor(x), mouse_state.cur_pos);\r\n        Vec2.map2(mouse_state.cur_pos, screen.size, (m, s) => clamp(m, 0, s - 1), mouse_state.cur_pos);\r\n    });\r\n\r\n    type KeyState = {\r\n        cur_pressed: boolean,\r\n        prev_pressed: boolean,\r\n    };\r\n    let keyboard_state = new DefaultDict<KeyState>(() => { return { cur_pressed: false, prev_pressed: false } });\r\n    window.addEventListener(\"keydown\", ev => {\r\n        keyboard_state[ev.code].cur_pressed = true;\r\n    });\r\n    window.addEventListener(\"keyup\", ev => {\r\n        keyboard_state[ev.code].cur_pressed = false;\r\n    });\r\n    function update_keyboard_state() {\r\n        for (const k in keyboard_state) {\r\n            keyboard_state[k].prev_pressed = keyboard_state[k].cur_pressed;\r\n        }\r\n    }\r\n\r\n    function keyJustPressed(key: string) {\r\n        return keyboard_state[key].cur_pressed && !keyboard_state[key].prev_pressed;\r\n    }\r\n    // function inputAxis(neg_keys: string[], pos_keys: string[]) {\r\n    //     let result = 0;\r\n    //     if (neg_keys.some(k => keyJustPressed(k))) result -= 1;\r\n    //     if (pos_keys.some(k => keyJustPressed(k))) result += 1;\r\n    //     return result;\r\n    // }\r\n    function genericAxis(neg: boolean, pos: boolean): -1 | 0 | 1 {\r\n        return neg ? (pos ? 0 : -1) : (pos ? 1 : 0);\r\n    }\r\n    function stepMovementInput(): Vec2 {\r\n        return new Vec2(\r\n            genericAxis([\"ArrowLeft\", \"KeyA\"].some(keyJustPressed), [\"ArrowRight\", \"KeyD\"].some(keyJustPressed)),\r\n            genericAxis([\"ArrowUp\", \"KeyW\"].some(keyJustPressed), [\"ArrowDown\", \"KeyS\"].some(keyJustPressed))\r\n        )\r\n    }\r\n\r\n    const BOARD_SIZE = new Vec2(4, 4);\r\n    const N_PASTRIES = 4;\r\n    let board_state = Grid2D.initV(BOARD_SIZE, p => randomInt(0, N_PASTRIES));\r\n    let cursor_tile = new Vec2(0, 0);\r\n\r\n    const TILE_SIZE = new Vec2(18, 16);\r\n    let tile_background = new Patch(TILE_SIZE);\r\n    drawFunction(tile_background, pos => {\r\n        if (Vec2.onBorder(pos, TILE_SIZE)) {\r\n            return Vec4.zero;\r\n        } else {\r\n            // on a corner of the inner rect?\r\n            if (onBorder(pos.x, 1, TILE_SIZE.x - 1) && onBorder(pos.y, 1, TILE_SIZE.y - 1)) {\r\n                return Vec4.zero;\r\n            } else {\r\n                return Vec4.fromHex(\"#C2C3C7\");\r\n            }\r\n        }\r\n    });\r\n\r\n    let last_time = 0;\r\n    function update(cur_time) {\r\n        // stats.update();\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n\r\n        // game logic\r\n        Vec2.add(cursor_tile, stepMovementInput(), cursor_tile);\r\n        Vec2.map2(cursor_tile, BOARD_SIZE, (v, s) => clamp(v, 0, s - 1), cursor_tile);\r\n\r\n        // visuals\r\n        drawFunction(screen, pos => {\r\n            let c = (pos.x ^ pos.y) % 256;\r\n            return new Vec4(c, c, c, 255);\r\n        });\r\n        blit(screen, sprite, mouse_state.cur_pos, (dst, src) => src.w < 128 ? dst : src);\r\n        drawLine(screen, new Vec2(64, 64), mouse_state.cur_pos, new Vec4(255, 0, 0, 255));\r\n        let text = \"HELLO WORLD!\";\r\n        printLineOutlined(text, new Vec2(Math.sin(cur_time * .005) * 30 + 64 - text.length * 2, 22), new Vec4(255, 128, 255, 255), new Vec4(128, 0, 128, 255));\r\n        // printLineOutlined(text, new Vec2(Math.sin(cur_time) + 64 - , 64), new Vec4(255, 128, 255, 255), new Vec4(128, 0, 128, 255));\r\n\r\n        let tiles_top_left = Rectangle.fromParams({ center: new Vec2(64, 64), size: Vec2.mul(BOARD_SIZE, TILE_SIZE) }).topLeft;\r\n        board_state.forEachV((index: Vec2, pastry: number) => {\r\n            let tile_top_left = Vec2.add(tiles_top_left, Vec2.mul(index, TILE_SIZE));\r\n            let selected = Vec2.equals(index, cursor_tile);\r\n            if (!selected) {\r\n                blit(screen, tile_background, tile_top_left, alphaMask);\r\n                let color_shadow = Vec4.fromHex(\"#83769C\");\r\n                blit(screen, pastries[pastry], Vec2.add(tile_top_left, new Vec2(1, 0)), (dst, src) => src.w > 0 ? color_shadow : dst);\r\n                blit(screen, pastries[pastry], Vec2.add(tile_top_left, new Vec2(1, -1)), alphaMask);\r\n            } else {\r\n                let color_tilebg_active = Vec4.fromHex(\"#FF77A8\");\r\n                blit(screen, tile_background, tile_top_left, (dst, src) => src.w > 0 ? color_tilebg_active : dst);\r\n                let color_shadow_active = Vec4.fromHex(\"#FF004D\");\r\n                blit(screen, pastries[pastry], Vec2.add(tile_top_left, new Vec2(1, 0)), (dst, src) => src.w > 0 ? color_shadow_active : dst);\r\n                blit(screen, pastries[pastry], Vec2.add(tile_top_left, new Vec2(1, Math.sin(cur_time * .01) - 2)), alphaMask);\r\n            }\r\n        });\r\n        let cursor_pos = Vec2.add(tiles_top_left, Vec2.mul(cursor_tile, TILE_SIZE));\r\n        Vec2.add(cursor_pos, new Vec2(14, 12), cursor_pos);\r\n        if (mod(cur_time, 800) > 650) {\r\n            Vec2.sub(cursor_pos, Vec2.one, cursor_pos);\r\n        }\r\n        blit(screen, cursor_sprite, cursor_pos, alphaMask);\r\n\r\n        twgl.setTextureFromArray(gl, screen_texture, screen.data);\r\n        gl.useProgram(program_info.program);\r\n        // Set the VAO (single gl call)\r\n        twgl.setBuffersAndAttributes(gl, program_info, vao_info);\r\n        twgl.setUniformsAndBindTextures(program_info, {\r\n            u_tex: screen_texture,\r\n        });\r\n        twgl.drawBufferInfo(gl, buffer_info);\r\n\r\n        update_keyboard_state();\r\n        requestAnimationFrame(update);\r\n    }\r\n    requestAnimationFrame(update);\r\n\r\n}\r\n\r\nmain();","export function randomInt(low_inclusive: number, high_exclusive: number): number {\r\n    return low_inclusive + Math.floor(Math.random() * (high_exclusive - low_inclusive));\r\n}\r\n\r\nexport function max(arr: number[]) {\r\n    if (arr.length === 0) {\r\n        return undefined\r\n    }\r\n    return arr[argmax(arr)!];\r\n}\r\n\r\nexport function argmax(arr: number[]) {\r\n    if (arr.length === 0) {\r\n        return undefined\r\n    }\r\n    let res = 0;\r\n    let biggest = arr[0];\r\n    for (let k = 1; k < arr.length; k++) {\r\n        if (arr[k] > biggest) {\r\n            biggest = arr[k];\r\n            res = k;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number {\r\n    return a * (1 - t) + b * t;\r\n}\r\n\r\nexport function towards(cur: number, target: number, max_delta: number): number {\r\n    if (cur > target) {\r\n        return Math.max(cur - max_delta, target);\r\n    } else if (cur < target) {\r\n        return Math.min(cur + max_delta, target);\r\n    } else {\r\n        return target;\r\n    }\r\n}\r\n\r\nexport function mod(n: number, m: number) {\r\n    return ((n % m) + m) % m;\r\n}\r\n\r\nexport function remap(value: number, old_a: number, old_b: number, new_a: number, new_b: number) {\r\n    let t = (value - old_a) / (old_b - old_a);\r\n    return t * (new_b - new_a) + new_a;\r\n}\r\n\r\nexport function randomChoice<T>(arr: T[]) {\r\n    if (arr.length === 0) {\r\n        throw new Error(\"can't choose out of an empty array\");\r\n    }\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function smoothstep(toZero: number, toOne: number, value: number) {\r\n    let x = Math.max(0, Math.min(1, (value - toZero) / (toOne - toZero)));\r\n    return x * x * (3 - 2 * x);\r\n};\r\n\r\nexport function clamp(value: number, min_inclusive: number, max_inclusive: number): number {\r\n    return Math.max(min_inclusive, Math.min(max_inclusive, value));\r\n}\r\n\r\nexport function inRange(value: number, min_inclusive: number, max_exclusive: number): boolean {\r\n    return value >= min_inclusive && value < max_exclusive;\r\n}\r\n\r\nexport function onBorder(value: number, min_inclusive: number, max_exclusive: number): boolean {\r\n    return value == min_inclusive || (value + 1) === max_exclusive;\r\n}\r\n\r\n// from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nexport function shuffle<T>(array: T[]) {\r\n    let currentIndex = array.length, randomIndex;\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n        // Pick a remaining element.\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        // And swap it with the current element.\r\n        [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\n// Use objects instead of arrays: https://jsben.ch/FgKVi\r\nexport class Vec4 {\r\n    constructor(\r\n        public x: number = 0.0,\r\n        public y: number = 0.0,\r\n        public z: number = 0.0,\r\n        public w: number = 0.0,\r\n    ) { }\r\n\r\n    static fromHex(hex_str: string): Vec4 {\r\n        // from https://stackoverflow.com/a/5624139\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex_str);\r\n        if (result === null) {\r\n            throw new Error(`can't parse hex: ${hex_str}`);\r\n        }\r\n        return new Vec4(\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16),\r\n            255,\r\n        );\r\n    }\r\n\r\n    static zero = new Vec4(0, 0, 0, 0);\r\n    static one = new Vec4(1, 1, 1, 1);\r\n}\r\n\r\ntype CardinalDirection = \"xpos\" | \"xneg\" | \"ypos\" | \"yneg\";\r\n\r\nexport class Vec2 {\r\n    constructor(\r\n        public x: number = 0.0,\r\n        public y: number = 0.0,\r\n    ) { }\r\n\r\n    toString(): string {\r\n        return `Vec2(${this.x}, ${this.y})`;\r\n    }\r\n\r\n    // scratchpad vectors, meant to be reused as intermediate values without allocation\r\n    static tmp = new Vec2(0, 0);\r\n    static tmp1 = new Vec2(0, 0);\r\n    static tmp2 = new Vec2(0, 0);\r\n    static tmp3 = new Vec2(0, 0);\r\n\r\n    static zero = new Vec2(0, 0);\r\n    static one = new Vec2(1, 1);\r\n\r\n    static set(v: Vec2, x: number, y: number): Vec2 {\r\n        v.x = x;\r\n        v.y = y;\r\n        return v;\r\n    }\r\n\r\n    static copy(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = v.x;\r\n        out.y = v.y;\r\n        return out;\r\n    }\r\n\r\n    static add(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        return out;\r\n    }\r\n\r\n    static sub(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        return out;\r\n    }\r\n\r\n    static mul(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        return out;\r\n    }\r\n\r\n    static div(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        return out;\r\n    }\r\n\r\n    static round(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = Math.round(v.x);\r\n        out.y = Math.round(v.y);\r\n        return out;\r\n    }\r\n\r\n    static negate(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = -v.x;\r\n        out.y = -v.y;\r\n        return out;\r\n    }\r\n\r\n    static scale(v: Vec2, s: number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = v.x * s;\r\n        out.y = v.y * s;\r\n        return out;\r\n    }\r\n\r\n    static lerp(a: Vec2, b: Vec2, t: number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x * (1 - t) + b.x * t;\r\n        out.y = a.y * (1 - t) + b.y * t;\r\n        return out;\r\n    }\r\n\r\n    static inBounds(point: Vec2, bounds: Vec2): boolean {\r\n        return inRange(point.x, 0, bounds.x) && inRange(point.y, 0, bounds.y);\r\n    }\r\n\r\n    // too niche for here?\r\n    static onBorder(point: Vec2, bounds: Vec2): boolean {\r\n        return onBorder(point.x, 0, bounds.x) || onBorder(point.y, 0, bounds.y);\r\n    }\r\n\r\n    static isZero(v: Vec2): boolean {\r\n        return v.x === 0 && v.y === 0;\r\n    }\r\n\r\n    static equals(a: Vec2, b: Vec2): boolean {\r\n        return a.x === b.x && a.y === b.y;\r\n    }\r\n\r\n    static map1(v: Vec2, fn: (x: number) => number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = fn(v.x);\r\n        out.y = fn(v.y);\r\n        return out;\r\n    }\r\n\r\n    static map2(a: Vec2, b: Vec2, fn: (a: number, b: number) => number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = fn(a.x, b.x);\r\n        out.y = fn(a.y, b.y);\r\n        return out;\r\n    }\r\n\r\n    static roundToCardinal(a: Vec2): CardinalDirection {\r\n        if (Math.abs(a.x) >= Math.abs(a.y)) {\r\n            if (a.x >= 0) {\r\n                return \"xpos\";\r\n            } else {\r\n                return \"xneg\";\r\n            }\r\n        } else {\r\n            if (a.y >= 0) {\r\n                return \"ypos\";\r\n            } else {\r\n                return \"yneg\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// todo: generalize, error check for too many args\r\nexport class Rectangle {\r\n    constructor(\r\n        public topLeft: Vec2,\r\n        public size: Vec2) { }\r\n\r\n    static fromParams(params: {\r\n        topLeft?: Vec2,\r\n        center?: Vec2,\r\n        bottomRight?: Vec2,\r\n        size?: Vec2,\r\n    }): Rectangle {\r\n        let topLeft = new Vec2();\r\n        let size = new Vec2();\r\n\r\n        if (params.topLeft !== undefined) {\r\n            Vec2.copy(params.topLeft, topLeft);\r\n            if (params.size !== undefined) {\r\n                Vec2.copy(params.size, size);\r\n            } else if (params.bottomRight !== undefined) {\r\n                Vec2.sub(params.bottomRight, topLeft, size);\r\n            } else if (params.center !== undefined) {\r\n                Vec2.sub(params.center, topLeft, size);\r\n                Vec2.scale(size, 2, size);\r\n            } else {\r\n                throw new Error(\"not enough data to compute rect\");\r\n            }\r\n            return new Rectangle(topLeft, size);\r\n        } else if (params.center !== undefined) {\r\n            if (params.size !== undefined) {\r\n                Vec2.copy(params.size, size);\r\n            } else if (params.bottomRight !== undefined) {\r\n                Vec2.sub(params.bottomRight, params.center, size);\r\n                Vec2.scale(size, 2, size);\r\n            } else {\r\n                throw new Error(\"not enough data to compute rect\");\r\n            }\r\n            Vec2.sub(params.center, Vec2.scale(size, .5), topLeft);\r\n            return new Rectangle(topLeft, size);\r\n        } else {\r\n            throw new Error(\"unimplemented\");\r\n        }\r\n    }\r\n}\r\n","// knexator's canvas\r\n\r\nimport * as twgl from \"twgl.js\";\r\nimport { Vec2 } from \"./math\";\r\n\r\nexport function initFromSelector(canvas_selector: string): WebGL2RenderingContext {\r\n    const canvas = document.querySelector(canvas_selector)! as HTMLCanvasElement;\r\n\r\n    // Assumption 1: the canvas itself is always opaque.\r\n    const gl = canvas.getContext(\"webgl2\", { alpha: false })!;\r\n\r\n    // Assumption 2: shader output isn't premultiplied \r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    // Assumption 3: use this default background color\r\n    gl.clearColor(0.5, 0.5, 0.75, 1.0);\r\n\r\n    // Assumption 4: canvas inner size is the same as display size\r\n    twgl.resizeCanvasToDisplaySize(canvas);\r\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\r\n    return gl;\r\n}\r\n\r\nexport function clientSize(gl: WebGL2RenderingContext): Vec2 {\r\n    let canvas = gl.canvas as HTMLCanvasElement;\r\n    return new Vec2(canvas.clientWidth, canvas.clientHeight);\r\n}\r\n\r\n\r\nexport class Patch {\r\n    data: Uint8ClampedArray\r\n    constructor(\r\n        public size: Vec2,\r\n        data?: Uint8ClampedArray,\r\n    ) {\r\n        if (data === undefined) {\r\n            this.data = new Uint8ClampedArray(size.x * size.y * 4);\r\n        } else {\r\n            this.data = data;\r\n        }\r\n    }\r\n}\r\n\r\n// from https://www.fabiofranchino.com/log/load-an-image-with-javascript-using-await/\r\nexport function imageFromUrl(url: string): Promise<HTMLImageElement> {\r\n    return new Promise((resolve, reject) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'Anonymous'; // to avoid CORS if used with Canvas\r\n        img.src = url\r\n        img.onload = () => {\r\n            resolve(img);\r\n        }\r\n        img.onerror = e => {\r\n            reject(e);\r\n        }\r\n    })\r\n}\r\n\r\nexport function canvasFromImage(img: HTMLImageElement): CanvasRenderingContext2D {\r\n    let canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n    let ctx = canvas.getContext(\"2d\")!;\r\n    ctx.drawImage(img, 0, 0);\r\n    return ctx;\r\n}\r\n\r\nexport function patchFromCanvas(ctx: CanvasRenderingContext2D): Patch {\r\n    let data = ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height).data;\r\n    return new Patch(new Vec2(ctx.canvas.width, ctx.canvas.height), data);\r\n}\r\n\r\nexport async function patchFromUrl(url: string): Promise<Patch> {\r\n    return patchFromCanvas(canvasFromImage(await imageFromUrl(url)));\r\n}\r\n","export function fromCount<T>(n: number, callback: (index: number) => T): T[] {\r\n    let result = Array(n);\r\n    for (let k = 0; k < n; k++) {\r\n        result[k] = callback(k);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function fromRange<T>(lo: number, hi: number, callback: (index: number) => T): T[] {\r\n    let count = hi - lo;\r\n    let result = Array(count);\r\n    for (let k = 0; k < count; k++) {\r\n        result[k] = callback(k + lo);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function* zip(...arrays: Iterable<any>[]): Generator<any> {\r\n    let iterators = arrays.map(a => a[Symbol.iterator]());\r\n    while (true) {\r\n        let nexts = iterators.map(a => a.next());\r\n        let done = nexts.some(n => n.done);\r\n        if (done) return;\r\n        yield nexts.map(n => n.value);\r\n    }\r\n}\r\n\r\nexport function objectMap<T, S>(object: Record<string, T>, map_fn: (x: T) => S): Record<string, S> {\r\n    let result: Record<string, S> = {};\r\n    for (let [k, v] of Object.entries(object)) {\r\n        result[k] = map_fn(v);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport class DefaultDict<T> {\r\n    constructor(init_fn: () => T) {\r\n        // typing doesn't work :(\r\n        let target: Record<string | symbol | number, T> = {};\r\n        return new Proxy(target, {\r\n            get: (target, name): T => {\r\n                if (name in target) {\r\n                    return target[name];\r\n                } else {\r\n                    target[name] = init_fn();\r\n                    return target[name];\r\n                }\r\n            }\r\n        })\r\n    }\r\n}\r\n","////////////////////////////////\r\n//****************************//\r\n// Tiny 2D array library\r\ninterface Vec2 {\r\n    x: number,\r\n    y: number,\r\n}\r\n\r\nexport class Grid2D<T> {\r\n    // 0 1 2\r\n    // 3 4 5\r\n    // 6 7 8\r\n    constructor(\r\n        public width: number,\r\n        public height: number,\r\n        private data: T[]) { }\r\n\r\n    get(i: number, j: number): T;\r\n    get<S>(i: number, j: number, outOfBounds: S): T | S;\r\n    get<S>(i: number, j: number, outOfBounds?: S): T | S {\r\n        if (!this.inBounds(i, j)) {\r\n            if (arguments.length === 3) {\r\n                return outOfBounds!;\r\n            }\r\n            throw new Error(`get at (${i}, ${j}) was out of bounds, and no default argument was given`);\r\n        }\r\n        return this.data[i + j * this.width];\r\n    }\r\n\r\n    getV<S>(pos: Vec2): T;\r\n    getV<S>(pos: Vec2, outOfBounds: S): T | S;\r\n    getV<S>(pos: Vec2, outOfBounds?: S): T | S {\r\n        if (arguments.length === 2) {\r\n            return this.get(pos.x, pos.y, outOfBounds!);\r\n        } else {\r\n            return this.get(pos.x, pos.y);\r\n        }\r\n    }\r\n\r\n    set(i: number, j: number, value: T): void {\r\n        if (!this.inBounds(i, j)) {\r\n            throw new Error(`can't set at (${i}, ${j}); out of bounds`);\r\n        }\r\n        this.data[i + j * this.width] = value;\r\n    }\r\n\r\n    setV(pos: Vec2, value: T): void {\r\n        return this.set(pos.x, pos.y, value);\r\n    }\r\n\r\n    inBounds(i: number, j: number): boolean {\r\n        return i >= 0 && i < this.width && j >= 0 && j < this.height;\r\n    }\r\n\r\n    inBoundsV(pos: Vec2): boolean {\r\n        return this.inBounds(pos.x, pos.y);\r\n    }\r\n\r\n    forEach(callback: (i: number, j: number, element: T) => void): void {\r\n        for (let i = 0; i < this.width; i++) {\r\n            for (let j = 0; j < this.height; j++) {\r\n                callback(i, j, this.data[i + j * this.width]);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachV(callback: (pos: Vec2, element: T) => void): void {\r\n        for (let i = 0; i < this.width; i++) {\r\n            for (let j = 0; j < this.height; j++) {\r\n                callback({ x: i, y: j }, this.data[i + j * this.width]);\r\n            }\r\n        }\r\n    }\r\n\r\n    filter(discriminator: (i: number, j: number, element: T) => boolean): T[] {\r\n        let result: T[] = [];\r\n        for (let i = 0; i < this.width; i++) {\r\n            for (let j = 0; j < this.height; j++) {\r\n                if (discriminator(i, j, this.data[i + j * this.width])) {\r\n                    result.push(this.data[i + j * this.width]);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static init<T>(width: number, height: number, fillFunc: (i: number, j: number) => T) {\r\n        let buffer: T[] = [];\r\n        for (let j = 0; j < height; j++) {\r\n            for (let i = 0; i < width; i++) {\r\n                buffer.push(fillFunc(i, j));\r\n            }\r\n        }\r\n        return new Grid2D(width, height, buffer);\r\n    }\r\n\r\n    static initV<T>(size: Vec2, fillFunc: (pos: Vec2) => T) {\r\n        let buffer: T[] = [];\r\n        for (let j = 0; j < size.y; j++) {\r\n            for (let i = 0; i < size.x; i++) {\r\n                buffer.push(fillFunc({ x: i, y: j }));\r\n            }\r\n        }\r\n        return new Grid2D(size.x, size.y, buffer);\r\n    }\r\n}\r\n//****************************//\r\n////////////////////////////////","module.exports = require('./helpers/bundle-url').getBundleURL('7CtNK') + \"../\" + require('./helpers/bundle-manifest').resolve(\"d5jLp\");","module.exports = require('./helpers/bundle-url').getBundleURL('7CtNK') + \"../\" + require('./helpers/bundle-manifest').resolve(\"828Ln\");","module.exports = require('./helpers/bundle-url').getBundleURL('7CtNK') + \"../\" + require('./helpers/bundle-manifest').resolve(\"cm5z8\");"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","i","length","resolved","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","value","$7dd1ddf6834435ca$var$getBundleURL","matches","stack","match","replace","JSON","parse","$6MzNI","$c15e63e86d3cb1d2$export$7d15b64cf5a3a4c4","min_inclusive","max_inclusive","Math","max","min","$c15e63e86d3cb1d2$export$66124ef7f3a58cb4","max_exclusive","$c15e63e86d3cb1d2$export$b973696b5f65b53b","constructor","x","y","z","w","fromHex","hex_str","result","exec","parseInt","_","zero","_1","one","$c15e63e86d3cb1d2$export$ac4bca90992eed1","toString","tmp","tmp1","_2","tmp2","_3","tmp3","_4","_5","copy","out","add","a","b","sub","mul","div","round","negate","scale","lerp","t","inBounds","point","bounds","$c15e63e86d3cb1d2$export$ddf89a9c5af38f94","onBorder","isZero","equals","map1","fn","map2","roundToCardinal","abs","$c15e63e86d3cb1d2$export$4617fb02663045ef","topLeft","size","fromParams","params","undefined","bottomRight","center","$c3915434cc9c6cd1$export$efb53073f026782","data","Uint8ClampedArray","$c3915434cc9c6cd1$export$b3460eb5f8fb3460","url","img","canvas","ctx","Promise","resolve","reject","Image","crossOrigin","src","onload","onerror","document","createElement","width","height","getContext","drawImage","getImageData","$e28a0cada894885c$export$9341a022b2e0184a","init_fn","Proxy","target","name","$f5972199cc150eb4$export$f89c48f5ee9bfddf","j","outOfBounds","arguments","getV","pos","setV","inBoundsV","forEach","callback","forEachV","filter","discriminator","push","fillFunc","buffer","initV","$ec62c306e2a0e589$var$setPixel","patch","p","col","base_index","$ec62c306e2a0e589$var$getPixel","$ec62c306e2a0e589$var$drawFunction","$ec62c306e2a0e589$var$blit","dst","combine_fn","src_pos","dst_pos","src_pixel","new_pixel","$ec62c306e2a0e589$var$splitSpritesheet","count","margin","usable_space","spr_size","Number","isInteger","cur_top_left","sj","si","$ec62c306e2a0e589$var$extract","top_left","$ec62c306e2a0e589$var$alphaMask","$e3784ee9d7d2dade$exports","getBundleURL","$848e9fc91914b666$exports","$d46c59f72bd91640$exports","$ec62c306e2a0e589$var$main","screen","cursor_sprite","URL","pastries_atlas","font_sprites","fromEntries","arrays","iterators","map","Symbol","iterator","nexts","next","some","done","font_outline_sprites","object","map_fn","k","entries","char_spr","neighs","neigh_pos","any_neigh","delta","pastries","sprite","gl","canvas_selector","querySelector","alpha","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","resizeCanvasToDisplaySize","viewport","drawingBufferWidth","drawingBufferHeight","screen_texture","createTexture","mag","NEAREST","LINEAR","format","RGBA","type","UNSIGNED_BYTE","program_info","createProgramInfo","buffer_info","createBufferInfoFromArrays","a_pos","numComponents","a_uv","vao_info","createVertexArrayInfo","mouse_state","cur_pos","addEventListener","ev","clientX","clientY","clientWidth","clientHeight","floor","m","keyboard_state","cur_pressed","prev_pressed","keyJustPressed","key","BOARD_SIZE","board_state","low_inclusive","high_exclusive","random","cursor_tile","TILE_SIZE","tile_background","requestAnimationFrame","update","cur_time","neg","clear","COLOR_BUFFER_BIT","c","$ec62c306e2a0e589$var$drawLine","dx","sx","dy","sy","error","e2","text","printLineOutlined","text_color","outline_color","char","printLine","color","sin","tiles_top_left","index","pastry","tile_top_left","color_tilebg_active","color_shadow_active","color_shadow","cursor_pos","setTextureFromArray","useProgram","program","setBuffersAndAttributes","setUniformsAndBindTextures","u_tex","drawBufferInfo","update_keyboard_state"],"version":3,"file":"index.3924de9f.js.map"}