{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,Q,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,K,E,Q,E,E,S,E,O,C,I,E,A,M,uB,E,I,O,E,K,mB,C,C,E,S,S,C,C,C,E,C,C,E,C,C,E,E,kB,G,I,E,E,QE0FO,OAAM,EACT,YACW,EAAY,CAAG,CACf,EAAY,CAAG,CACf,EAAY,CAAG,CACf,EAAY,CAAG,CACxB,CAJS,IAAA,CAAA,EAAA,EACA,IAAA,CAAA,EAAA,EACA,IAAA,CAAA,EAAA,EACA,IAAA,CAAA,EAAA,CACP,CAEJ,OAAO,QAAQ,CAAe,CAAQ,CAElC,IAAI,EAAS,4CAA4C,KAAK,GAC9D,GAAI,AAAW,OAAX,EACA,MAAM,AAAI,MAAM,CAAC,iBAAiB,EAAE,EAAQ,CAAC,EAEjD,OAAO,IAAI,EACP,SAAS,CAAM,CAAC,EAAE,CAAE,IACpB,SAAS,CAAM,CAAC,EAAE,CAAE,IACpB,SAAS,CAAM,CAAC,EAAE,CAAE,IACpB,IAER,C,O,C,C,C,A,C,KAEO,IAAA,CAAA,KAAO,IAAI,EAAK,EAAG,EAAG,EAAG,E,C,G,A,Q,C,C,C,A,C,KACzB,IAAA,CAAA,IAAM,IAAI,EAAK,EAAG,EAAG,EAAG,E,C,G,AACnC,CAIO,MAAM,EACT,YACW,EAAY,CAAG,CACf,EAAY,CAAG,CACxB,CAFS,IAAA,CAAA,EAAA,EACA,IAAA,CAAA,EAAA,CACP,CAEJ,UAAmB,CACf,MAAO,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,AACvC,C,O,C,C,C,A,C,KAGO,IAAA,CAAA,IAAM,IAAI,EAAK,EAAG,E,C,G,A,Q,C,C,C,A,C,KAClB,IAAA,CAAA,KAAO,IAAI,EAAK,EAAG,E,C,G,A,Q,C,C,C,A,C,KACnB,IAAA,CAAA,KAAO,IAAI,EAAK,EAAG,E,C,G,A,Q,C,C,C,A,C,KACnB,IAAA,CAAA,KAAO,IAAI,EAAK,EA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","sources":["<anon>","thueMorse/main.ts","kommon/math.ts"],"sourcesContent":["(function () {\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar $6MzNI = parcelRequire(\"6MzNI\");\nfunction $c15e63e86d3cb1d2$export$3c5f89dae98e900b(low_inclusive, high_exclusive) {\n    return low_inclusive + Math.floor(Math.random() * (high_exclusive - low_inclusive));\n}\nfunction $c15e63e86d3cb1d2$export$8960430cfd85939f(arr) {\n    if (arr.length === 0) return undefined;\n    return arr[$c15e63e86d3cb1d2$export$3249d46f03066cfe(arr)];\n}\nfunction $c15e63e86d3cb1d2$export$3249d46f03066cfe(arr) {\n    if (arr.length === 0) return undefined;\n    let res = 0;\n    let biggest = arr[0];\n    for(let k = 1; k < arr.length; k++)if (arr[k] > biggest) {\n        biggest = arr[k];\n        res = k;\n    }\n    return res;\n}\nfunction $c15e63e86d3cb1d2$export$3a89f8d6f6bf6c9f(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction $c15e63e86d3cb1d2$export$dff840edf10f285e(cur, target, max_delta) {\n    if (cur > target) return Math.max(cur - max_delta, target);\n    else if (cur < target) return Math.min(cur + max_delta, target);\n    else return target;\n}\nfunction $c15e63e86d3cb1d2$export$842a2cf37af977e1(n, m) {\n    return (n % m + m) % m;\n}\nfunction $c15e63e86d3cb1d2$export$aee1dbae5de2db9d(value, old_a, old_b, new_a, new_b) {\n    let t = (value - old_a) / (old_b - old_a);\n    return t * (new_b - new_a) + new_a;\n}\nfunction $c15e63e86d3cb1d2$export$94951fac5549ef77(arr) {\n    if (arr.length === 0) throw new Error(\"can't choose out of an empty array\");\n    return arr[Math.floor(Math.random() * arr.length)];\n}\nfunction $c15e63e86d3cb1d2$export$4053e36566dd3d9a(toZero, toOne, value) {\n    let x = Math.max(0, Math.min(1, (value - toZero) / (toOne - toZero)));\n    return x * x * (3 - 2 * x);\n}\nfunction $c15e63e86d3cb1d2$export$7d15b64cf5a3a4c4(value, min_inclusive, max_inclusive) {\n    return Math.max(min_inclusive, Math.min(max_inclusive, value));\n}\nfunction $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(value, min_inclusive, max_exclusive) {\n    return value >= min_inclusive && value < max_exclusive;\n}\nfunction $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(value, min_inclusive, max_exclusive) {\n    return value == min_inclusive || value + 1 === max_exclusive;\n}\nfunction $c15e63e86d3cb1d2$export$448332262467e042(array) {\n    let currentIndex = array.length, randomIndex;\n    // While there remain elements to shuffle.\n    while(currentIndex != 0){\n        // Pick a remaining element.\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        // And swap it with the current element.\n        [array[currentIndex], array[randomIndex]] = [\n            array[randomIndex],\n            array[currentIndex]\n        ];\n    }\n    return array;\n}\nclass $c15e63e86d3cb1d2$export$b973696b5f65b53b {\n    constructor(x = 0.0, y = 0.0, z = 0.0, w = 0.0){\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n    static fromHex(hex_str) {\n        // from https://stackoverflow.com/a/5624139\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex_str);\n        if (result === null) throw new Error(`can't parse hex: ${hex_str}`);\n        return new $c15e63e86d3cb1d2$export$b973696b5f65b53b(parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16), 255);\n    }\n    static #_ = (()=>{\n        this.zero = new $c15e63e86d3cb1d2$export$b973696b5f65b53b(0, 0, 0, 0);\n    })();\n    static #_1 = (()=>{\n        this.one = new $c15e63e86d3cb1d2$export$b973696b5f65b53b(1, 1, 1, 1);\n    })();\n}\nclass $c15e63e86d3cb1d2$export$ac4bca90992eed1 {\n    constructor(x = 0.0, y = 0.0){\n        this.x = x;\n        this.y = y;\n    }\n    toString() {\n        return `Vec2(${this.x}, ${this.y})`;\n    }\n    static #_ = (()=>{\n        // scratchpad vectors, meant to be reused as intermediate values without allocation\n        this.tmp = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_1 = (()=>{\n        this.tmp1 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_2 = (()=>{\n        this.tmp2 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_3 = (()=>{\n        this.tmp3 = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_4 = (()=>{\n        this.zero = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(0, 0);\n    })();\n    static #_5 = (()=>{\n        this.one = new $c15e63e86d3cb1d2$export$ac4bca90992eed1(1, 1);\n    })();\n    static set(v, x, y) {\n        v.x = x;\n        v.y = y;\n        return v;\n    }\n    static copy(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = v.x;\n        out.y = v.y;\n        return out;\n    }\n    static add(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x + b.x;\n        out.y = a.y + b.y;\n        return out;\n    }\n    static sub(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x - b.x;\n        out.y = a.y - b.y;\n        return out;\n    }\n    static mul(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x * b.x;\n        out.y = a.y * b.y;\n        return out;\n    }\n    static div(a, b, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x / b.x;\n        out.y = a.y / b.y;\n        return out;\n    }\n    static round(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = Math.round(v.x);\n        out.y = Math.round(v.y);\n        return out;\n    }\n    static negate(v, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = -v.x;\n        out.y = -v.y;\n        return out;\n    }\n    static scale(v, s, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = v.x * s;\n        out.y = v.y * s;\n        return out;\n    }\n    static lerp(a, b, t, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = a.x * (1 - t) + b.x * t;\n        out.y = a.y * (1 - t) + b.y * t;\n        return out;\n    }\n    static inBounds(point, bounds) {\n        return $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(point.x, 0, bounds.x) && $c15e63e86d3cb1d2$export$ddf89a9c5af38f94(point.y, 0, bounds.y);\n    }\n    // too niche for here?\n    static onBorder(point, bounds) {\n        return $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(point.x, 0, bounds.x) || $c15e63e86d3cb1d2$export$66124ef7f3a58cb4(point.y, 0, bounds.y);\n    }\n    static isZero(v) {\n        return v.x === 0 && v.y === 0;\n    }\n    static equals(a, b) {\n        return a.x === b.x && a.y === b.y;\n    }\n    static map1(v, fn, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = fn(v.x);\n        out.y = fn(v.y);\n        return out;\n    }\n    static map2(a, b, fn, out) {\n        out = out || new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        out.x = fn(a.x, b.x);\n        out.y = fn(a.y, b.y);\n        return out;\n    }\n    static roundToCardinal(a) {\n        if (Math.abs(a.x) >= Math.abs(a.y)) {\n            if (a.x >= 0) return \"xpos\";\n            else return \"xneg\";\n        } else {\n            if (a.y >= 0) return \"ypos\";\n            else return \"yneg\";\n        }\n    }\n}\nclass $c15e63e86d3cb1d2$export$4617fb02663045ef {\n    constructor(topLeft, size){\n        this.topLeft = topLeft;\n        this.size = size;\n    }\n    static fromParams(params) {\n        let topLeft = new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        let size = new $c15e63e86d3cb1d2$export$ac4bca90992eed1();\n        if (params.topLeft !== undefined) {\n            $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.topLeft, topLeft);\n            if (params.size !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.size, size);\n            else if (params.bottomRight !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.bottomRight, topLeft, size);\n            else if (params.center !== undefined) {\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.center, topLeft, size);\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, 2, size);\n            } else throw new Error(\"not enough data to compute rect\");\n            return new $c15e63e86d3cb1d2$export$4617fb02663045ef(topLeft, size);\n        } else if (params.center !== undefined) {\n            if (params.size !== undefined) $c15e63e86d3cb1d2$export$ac4bca90992eed1.copy(params.size, size);\n            else if (params.bottomRight !== undefined) {\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.bottomRight, params.center, size);\n                $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, 2, size);\n            } else throw new Error(\"not enough data to compute rect\");\n            $c15e63e86d3cb1d2$export$ac4bca90992eed1.sub(params.center, $c15e63e86d3cb1d2$export$ac4bca90992eed1.scale(size, .5), topLeft);\n            return new $c15e63e86d3cb1d2$export$4617fb02663045ef(topLeft, size);\n        } else throw new Error(\"unimplemented\");\n    }\n}\n\n\nconst $487ab72b82ca8087$var$canvas = document.querySelector(\"#c\");\nconst $487ab72b82ca8087$var$ctx = $487ab72b82ca8087$var$canvas.getContext(\"2d\");\nlet $487ab72b82ca8087$var$loop_id = requestAnimationFrame($487ab72b82ca8087$var$update);\ndocument.addEventListener(\"keydown\", $487ab72b82ca8087$var$onKeyDown);\n// document.addEventListener(\"keyup\", onKeyUp);\ndocument.addEventListener(\"click\", $487ab72b82ca8087$var$onClick);\nfunction $487ab72b82ca8087$var$onKeyDown(ev) {\n    switch(ev.code){\n        case \"KeyA\":\n        case \"KeyQ\":\n        case \"KeyZ\":\n            $487ab72b82ca8087$var$onInput(true);\n            break;\n        case \"KeyD\":\n        case \"KeyM\":\n        case \"KeyP\":\n            $487ab72b82ca8087$var$onInput(false);\n            break;\n        default:\n            break;\n    }\n}\nlet $487ab72b82ca8087$var$pending_click = true;\nfunction $487ab72b82ca8087$var$onClick(ev) {\n    if ($487ab72b82ca8087$var$pending_click) $487ab72b82ca8087$var$pending_click = false;\n    else $487ab72b82ca8087$var$onInput(ev.pageX < window.innerWidth / 2);\n}\nlet $487ab72b82ca8087$var$cur_turn = 0;\nlet $487ab72b82ca8087$var$prev_player_address = [\n    0\n];\nlet $487ab72b82ca8087$var$player_address = [\n    0\n];\nlet $487ab72b82ca8087$var$anim_turn = false;\n/** between 0 & 1 */ let $487ab72b82ca8087$var$anim_t = 0.0;\nconst $487ab72b82ca8087$var$anim_duration = .3;\n// starts as true;\nfunction $487ab72b82ca8087$var$thueMorse(n) {\n    let res = true;\n    while(n > 0){\n        if (n % 2 == 1) res = !res;\n        n = n >> 1;\n    }\n    return res;\n}\nfunction $487ab72b82ca8087$var$depth(n) {\n    let res = 0;\n    let cur_at_depth = 4;\n    n -= cur_at_depth;\n    while(n > 0){\n        res += 1;\n        cur_at_depth *= 4;\n        n -= cur_at_depth;\n    }\n    return res;\n}\nfunction $487ab72b82ca8087$var$nextAdress(address) {\n    if (address.every((d)=>d == 3)) {\n        let result = Array(address.length + 1).fill(0);\n        result[0] = 1;\n        return result;\n    }\n    let result = address.slice();\n    for(let k = result.length - 1; k >= 0; k--){\n        if (result[k] !== 3) {\n            result[k] += 1;\n            return result;\n        }\n        result[k] = 0;\n    }\n    throw new Error(\"???\");\n}\nfunction $487ab72b82ca8087$var$onInput(is_left) {\n    $487ab72b82ca8087$var$anim_t = 0;\n    if (is_left == $487ab72b82ca8087$var$thueMorse($487ab72b82ca8087$var$cur_turn)) {\n        $487ab72b82ca8087$var$cur_turn += 1;\n        $487ab72b82ca8087$var$anim_turn = $487ab72b82ca8087$var$player_address.every((d)=>d == 3);\n        $487ab72b82ca8087$var$prev_player_address = $487ab72b82ca8087$var$player_address.slice();\n        $487ab72b82ca8087$var$player_address = $487ab72b82ca8087$var$nextAdress($487ab72b82ca8087$var$player_address);\n        console.log(\"prev: \", $487ab72b82ca8087$var$prev_player_address);\n        console.log(\"cur: \", $487ab72b82ca8087$var$player_address);\n    } else {\n        // lost!\n        alert(`score: ${$487ab72b82ca8087$var$cur_turn}`);\n        $487ab72b82ca8087$var$cur_turn = 0;\n        $487ab72b82ca8087$var$anim_turn = false;\n        $487ab72b82ca8087$var$player_address = [\n            0\n        ];\n    }\n}\nfunction $487ab72b82ca8087$var$getVisiting(address, player) {\n    player = player || $487ab72b82ca8087$var$player_address;\n    for(let k = 0; k < Math.min(address.length, player.length); k++){\n        if (address[k] < player[k]) return 0;\n        else if (address[k] > player[k]) return 2;\n    }\n    return 1;\n}\nconst $487ab72b82ca8087$var$colors_asdf = [\n    \"#5FAD67\",\n    \"#A9F05F\",\n    \"#5889A2\"\n];\n// visiting: \"past\" | \"present\" | \"future\"\nfunction $487ab72b82ca8087$var$drawTiles(x, y, w, h, address, flip) {\n    if (address.length < $487ab72b82ca8087$var$player_address.length) {\n        // still bigger than the player, recurse more\n        let x1 = x;\n        let x2 = x + w / 2;\n        if (flip) {\n            x1 = x + w / 2;\n            x2 = x;\n        }\n        $487ab72b82ca8087$var$drawTiles(x1, y, w / 2, h / 4, address.concat([\n            0\n        ]), flip);\n        $487ab72b82ca8087$var$drawTiles(x2, y + h / 4, w / 2, h / 4, address.concat([\n            1\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTiles(x2, y + h / 2, w / 2, h / 4, address.concat([\n            2\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTiles(x1, y + h * .75, w / 2, h / 4, address.concat([\n            3\n        ]), flip);\n    } else {\n        // plain quad\n        let visiting = $487ab72b82ca8087$var$getVisiting(address);\n        $487ab72b82ca8087$var$ctx.fillStyle = $487ab72b82ca8087$var$colors_asdf[visiting];\n        $487ab72b82ca8087$var$ctx.fillRect(x, y, w, h);\n    }\n}\nconst $487ab72b82ca8087$var$colors_v2_left = [\n    \"red\",\n    \"pink\",\n    \"darkred\"\n];\nconst $487ab72b82ca8087$var$colors_v2_right = [\n    \"green\",\n    \"lime\",\n    \"darkgreen\"\n];\nfunction $487ab72b82ca8087$var$drawTilesV2(x, y, w, h, address, flip) {\n    if (address.length < $487ab72b82ca8087$var$player_address.length) {\n        // still bigger than the player, recurse more\n        let x1 = x;\n        let x2 = x + w / 2;\n        let y1 = y;\n        let y2 = y + h / 2;\n        $487ab72b82ca8087$var$drawTilesV2(x1, y1, w / 2, h / 2, address.concat([\n            0\n        ]), flip);\n        $487ab72b82ca8087$var$drawTilesV2(x2, y1, w / 2, h / 2, address.concat([\n            1\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTilesV2(x1, y2, w / 2, h / 2, address.concat([\n            2\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTilesV2(x2, y2, w / 2, h / 2, address.concat([\n            3\n        ]), flip);\n        if ($487ab72b82ca8087$var$getVisiting(address) == 0) {\n            // fully in the past\n            let colors = flip ? $487ab72b82ca8087$var$colors_v2_left : $487ab72b82ca8087$var$colors_v2_right;\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            let border = w / 8;\n            if ($487ab72b82ca8087$var$player_address[$487ab72b82ca8087$var$player_address.length - 1] == 0 // has player changed square?\n             && (!$487ab72b82ca8087$var$anim_turn ? $487ab72b82ca8087$var$getVisiting(address, $487ab72b82ca8087$var$prev_player_address) == 1 : $487ab72b82ca8087$var$getVisiting(address, [\n                0\n            ].concat($487ab72b82ca8087$var$prev_player_address)) == 1)) border *= $487ab72b82ca8087$var$anim_t;\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, border);\n        }\n    } else {\n        // plain quad\n        let colors = flip ? $487ab72b82ca8087$var$colors_v2_left : $487ab72b82ca8087$var$colors_v2_right;\n        let visiting = $487ab72b82ca8087$var$getVisiting(address);\n        if (visiting == 0) {\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[0];\n            $487ab72b82ca8087$var$ctx.fillRect(x, y, w, h);\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, w / 8);\n        }\n        if (visiting == 1) {\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, w / 8);\n        }\n    }\n}\nfunction $487ab72b82ca8087$var$drawTilesV3(x, y, w, h, address, flip) {\n    if (address.length < $487ab72b82ca8087$var$player_address.length) {\n        // still bigger than the player, recurse more\n        let x1 = x;\n        let x2 = x + w / 2;\n        let y1 = y;\n        let y2 = y + h / 2;\n        if (flip) {\n            x1 = x + w / 2;\n            x2 = x;\n        }\n        $487ab72b82ca8087$var$drawTilesV3(x1, y1, w / 2, h / 2, address.concat([\n            0\n        ]), flip);\n        $487ab72b82ca8087$var$drawTilesV3(x2, y1, w / 2, h / 2, address.concat([\n            1\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTilesV3(x2, y2, w / 2, h / 2, address.concat([\n            2\n        ]), !flip);\n        $487ab72b82ca8087$var$drawTilesV3(x1, y2, w / 2, h / 2, address.concat([\n            3\n        ]), flip);\n        if ($487ab72b82ca8087$var$getVisiting(address) == 0) {\n            // fully in the past\n            let colors = flip ? $487ab72b82ca8087$var$colors_v2_left : $487ab72b82ca8087$var$colors_v2_right;\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            let border = w / 8;\n            if ($487ab72b82ca8087$var$player_address[$487ab72b82ca8087$var$player_address.length - 1] == 0 // has player changed square?\n             && (!$487ab72b82ca8087$var$anim_turn ? $487ab72b82ca8087$var$getVisiting(address, $487ab72b82ca8087$var$prev_player_address) == 1 : $487ab72b82ca8087$var$getVisiting(address, [\n                0\n            ].concat($487ab72b82ca8087$var$prev_player_address)) == 1)) border *= $487ab72b82ca8087$var$anim_t;\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, border);\n        }\n    } else {\n        // plain quad\n        let colors = flip ? $487ab72b82ca8087$var$colors_v2_left : $487ab72b82ca8087$var$colors_v2_right;\n        let visiting = $487ab72b82ca8087$var$getVisiting(address);\n        if (visiting == 0) {\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[0];\n            $487ab72b82ca8087$var$ctx.fillRect(x, y, w, h);\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, w / 8);\n        }\n        if (visiting == 1) {\n            $487ab72b82ca8087$var$ctx.fillStyle = colors[1];\n            $487ab72b82ca8087$var$thickBorder(x, y, w, h, w / 8);\n        }\n    }\n}\nfunction $487ab72b82ca8087$var$thickBorder(x, y, w, h, border) {\n    $487ab72b82ca8087$var$ctx.fillRect(x, y, w, border);\n    $487ab72b82ca8087$var$ctx.fillRect(x, y + h - border, w, border);\n    $487ab72b82ca8087$var$ctx.fillRect(x, y, border, h);\n    $487ab72b82ca8087$var$ctx.fillRect(x + w - border, y, border, h);\n}\nlet $487ab72b82ca8087$var$time_last = 0;\nfunction $487ab72b82ca8087$var$update(time_cur) {\n    $6MzNI.resizeCanvasToDisplaySize($487ab72b82ca8087$var$canvas);\n    let delta = (time_cur - $487ab72b82ca8087$var$time_last) * 0.001;\n    $487ab72b82ca8087$var$time_last = time_cur;\n    $487ab72b82ca8087$var$ctx.fillStyle = \"#4E5E5E\";\n    $487ab72b82ca8087$var$ctx.fillRect(0, 0, $487ab72b82ca8087$var$canvas.width, $487ab72b82ca8087$var$canvas.height);\n    $487ab72b82ca8087$var$anim_t += delta / $487ab72b82ca8087$var$anim_duration;\n    $487ab72b82ca8087$var$anim_t = Math.min(1.0, $487ab72b82ca8087$var$anim_t);\n    let x = 0;\n    let y = 0;\n    let w = $487ab72b82ca8087$var$canvas.width;\n    let h = $487ab72b82ca8087$var$canvas.height;\n    if ($487ab72b82ca8087$var$anim_turn) {\n        w = (0, $c15e63e86d3cb1d2$export$3a89f8d6f6bf6c9f)(w * 2, w, $487ab72b82ca8087$var$anim_t);\n        // h = lerp(h * 4, h, anim_t); // style 1: vertical\n        h = (0, $c15e63e86d3cb1d2$export$3a89f8d6f6bf6c9f)(h * 2, h, $487ab72b82ca8087$var$anim_t); // style 2: squares\n    }\n    // drawTiles(x, y, w, h, [], false);\n    // drawTilesV2(x, y, w, h, [], false);\n    $487ab72b82ca8087$var$drawTilesV3(x, y, w, h, [], false);\n    // cheat\n    // while (cur_turn < 1023) {\n    //     onInput(thueMorse(cur_turn));\n    // }\n    if ($487ab72b82ca8087$var$pending_click) {\n        $487ab72b82ca8087$var$ctx.fillStyle = \"pink\";\n        $487ab72b82ca8087$var$ctx.textAlign = \"center\";\n        $487ab72b82ca8087$var$ctx.textBaseline = \"middle\";\n        $487ab72b82ca8087$var$ctx.font = \"60px Arial\";\n        $487ab72b82ca8087$var$ctx.fillText(\"Click to start\", $487ab72b82ca8087$var$canvas.width / 2, $487ab72b82ca8087$var$canvas.height * 3 / 4);\n    }\n    $487ab72b82ca8087$var$loop_id = requestAnimationFrame($487ab72b82ca8087$var$update);\n}\n\n})();\n//# sourceMappingURL=index.8c435a44.js.map\n","import * as twgl from \"twgl.js\";\r\nimport { lerp } from \"../kommon/math\";\r\n\r\nconst canvas = document.querySelector(\"#c\") as HTMLCanvasElement;\r\nconst ctx = canvas.getContext(\"2d\")!;\r\n\r\nlet loop_id = requestAnimationFrame(update);\r\ndocument.addEventListener(\"keydown\", onKeyDown);\r\n// document.addEventListener(\"keyup\", onKeyUp);\r\ndocument.addEventListener(\"click\", onClick);\r\n\r\nfunction onKeyDown(ev: KeyboardEvent) {\r\n    switch (ev.code) {\r\n        case \"KeyA\":\r\n        case \"KeyQ\":\r\n        case \"KeyZ\":\r\n            onInput(true);\r\n            break;\r\n        case \"KeyD\":\r\n        case \"KeyM\":\r\n        case \"KeyP\":\r\n            onInput(false);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nlet pending_click = true;\r\nfunction onClick(ev: MouseEvent) {\r\n    if (pending_click) {\r\n        pending_click = false;\r\n    } else {\r\n        onInput(ev.pageX < window.innerWidth / 2);\r\n    }\r\n}\r\n\r\nlet cur_turn = 0;\r\nlet prev_player_address = [0];\r\nlet player_address = [0];\r\nlet anim_turn = false;\r\n/** between 0 & 1 */\r\nlet anim_t = 0.0;\r\nconst anim_duration = .3;\r\n\r\n// starts as true;\r\nfunction thueMorse(n: number) {\r\n    let res = true;\r\n    while (n > 0) {\r\n        if (n % 2 == 1) {\r\n            res = !res;\r\n        }\r\n        n = n >> 1;\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction depth(n: number) {\r\n    let res = 0;\r\n    let cur_at_depth = 4;\r\n    n -= cur_at_depth;\r\n    while (n > 0) {\r\n        res += 1;\r\n        cur_at_depth *= 4;\r\n        n -= cur_at_depth;\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction nextAdress(address: number[]) {\r\n    if (address.every(d => d == 3)) {\r\n        let result = Array(address.length + 1).fill(0);\r\n        result[0] = 1;\r\n        return result;\r\n    }\r\n    let result = address.slice();\r\n    for (let k = result.length - 1; k >= 0; k--) {\r\n        if (result[k] !== 3) {\r\n            result[k] += 1;\r\n            return result;\r\n        }\r\n        result[k] = 0;\r\n    }\r\n    throw new Error(\"???\");\r\n}\r\n\r\nfunction onInput(is_left: boolean) {\r\n    anim_t = 0;\r\n    if (is_left == thueMorse(cur_turn)) {\r\n        cur_turn += 1;\r\n        anim_turn = player_address.every(d => d == 3);\r\n        prev_player_address = player_address.slice();\r\n        player_address = nextAdress(player_address);\r\n        console.log(\"prev: \", prev_player_address)\r\n        console.log(\"cur: \", player_address)\r\n    } else {\r\n        // lost!\r\n        alert(`score: ${cur_turn}`)\r\n        cur_turn = 0;\r\n        anim_turn = false;\r\n        player_address = [0];\r\n    }\r\n}\r\n\r\nfunction getVisiting(address: number[], player?: number[]): 0 | 1 | 2 {\r\n    player = player || player_address;\r\n    for (let k = 0; k < Math.min(address.length, player.length); k++) {\r\n        if (address[k] < player[k]) {\r\n            return 0;\r\n        } else if (address[k] > player[k]) {\r\n            return 2;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nconst colors_asdf = [\"#5FAD67\", \"#A9F05F\", \"#5889A2\"];\r\n// visiting: \"past\" | \"present\" | \"future\"\r\nfunction drawTiles(x: number, y: number, w: number, h: number, address: number[], flip: boolean) {\r\n    if (address.length < player_address.length) {\r\n        // still bigger than the player, recurse more\r\n        let x1 = x;\r\n        let x2 = x + w / 2;\r\n        if (flip) {\r\n            x1 = x + w / 2;\r\n            x2 = x;\r\n        }\r\n\r\n        drawTiles(x1, y, w / 2, h / 4, address.concat([0]), flip);\r\n        drawTiles(x2, y + h / 4, w / 2, h / 4, address.concat([1]), !flip);\r\n        drawTiles(x2, y + h / 2, w / 2, h / 4, address.concat([2]), !flip);\r\n        drawTiles(x1, y + h * .75, w / 2, h / 4, address.concat([3]), flip);\r\n    } else {\r\n        // plain quad\r\n        let visiting = getVisiting(address);\r\n        ctx.fillStyle = colors_asdf[visiting];\r\n        ctx.fillRect(x, y, w, h);\r\n    }\r\n}\r\n\r\nconst colors_v2_left = [\"red\", \"pink\", \"darkred\"];\r\nconst colors_v2_right = [\"green\", \"lime\", \"darkgreen\"];\r\nfunction drawTilesV2(x: number, y: number, w: number, h: number, address: number[], flip: boolean) {\r\n    if (address.length < player_address.length) {\r\n        // still bigger than the player, recurse more\r\n        let x1 = x;\r\n        let x2 = x + w / 2;\r\n        let y1 = y;\r\n        let y2 = y + h / 2;\r\n\r\n        drawTilesV2(x1, y1, w / 2, h / 2, address.concat([0]), flip);\r\n        drawTilesV2(x2, y1, w / 2, h / 2, address.concat([1]), !flip);\r\n        drawTilesV2(x1, y2, w / 2, h / 2, address.concat([2]), !flip);\r\n        drawTilesV2(x2, y2, w / 2, h / 2, address.concat([3]), flip);\r\n\r\n        if (getVisiting(address) == 0) {\r\n            // fully in the past\r\n            let colors = flip ? colors_v2_left : colors_v2_right\r\n            ctx.fillStyle = colors[1];\r\n            let border = w / 8;\r\n            if (\r\n                player_address[player_address.length - 1] == 0 // has player changed square?\r\n                && (!anim_turn ?\r\n                    getVisiting(address, prev_player_address) == 1 : // did we just visit this square?\r\n                    getVisiting(address, [0].concat(prev_player_address)) == 1)) // special case: if zooming, fake the address\r\n            {\r\n                border *= anim_t;\r\n            }\r\n            thickBorder(x, y, w, h, border);\r\n        }\r\n    } else {\r\n        // plain quad\r\n        let colors = flip ? colors_v2_left : colors_v2_right\r\n\r\n        let visiting = getVisiting(address);\r\n        if (visiting == 0) {\r\n            ctx.fillStyle = colors[0];\r\n            ctx.fillRect(x, y, w, h);\r\n            ctx.fillStyle = colors[1];\r\n            thickBorder(x, y, w, h, w / 8);\r\n        }\r\n        if (visiting == 1) {\r\n            ctx.fillStyle = colors[1];\r\n            thickBorder(x, y, w, h, w / 8);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction drawTilesV3(x: number, y: number, w: number, h: number, address: number[], flip: boolean) {\r\n    if (address.length < player_address.length) {\r\n        // still bigger than the player, recurse more\r\n        let x1 = x;\r\n        let x2 = x + w / 2;\r\n        let y1 = y;\r\n        let y2 = y + h / 2;\r\n\r\n        if (flip) {\r\n            x1 = x + w / 2;\r\n            x2 = x;\r\n        }\r\n\r\n        drawTilesV3(x1, y1, w / 2, h / 2, address.concat([0]), flip);\r\n        drawTilesV3(x2, y1, w / 2, h / 2, address.concat([1]), !flip);\r\n        drawTilesV3(x2, y2, w / 2, h / 2, address.concat([2]), !flip);\r\n        drawTilesV3(x1, y2, w / 2, h / 2, address.concat([3]), flip);\r\n\r\n        if (getVisiting(address) == 0) {\r\n            // fully in the past\r\n            let colors = flip ? colors_v2_left : colors_v2_right\r\n            ctx.fillStyle = colors[1];\r\n            let border = w / 8;\r\n            if (\r\n                player_address[player_address.length - 1] == 0 // has player changed square?\r\n                && (!anim_turn ?\r\n                    getVisiting(address, prev_player_address) == 1 : // did we just visit this square?\r\n                    getVisiting(address, [0].concat(prev_player_address)) == 1)) // special case: if zooming, fake the address\r\n            {\r\n                border *= anim_t;\r\n            }\r\n            thickBorder(x, y, w, h, border);\r\n        }\r\n    } else {\r\n        // plain quad\r\n        let colors = flip ? colors_v2_left : colors_v2_right\r\n\r\n        let visiting = getVisiting(address);\r\n        if (visiting == 0) {\r\n            ctx.fillStyle = colors[0];\r\n            ctx.fillRect(x, y, w, h);\r\n            ctx.fillStyle = colors[1];\r\n            thickBorder(x, y, w, h, w / 8);\r\n        }\r\n        if (visiting == 1) {\r\n            ctx.fillStyle = colors[1];\r\n            thickBorder(x, y, w, h, w / 8);\r\n        }\r\n    }\r\n}\r\n\r\nfunction thickBorder(x: number, y: number, w: number, h: number, border: number) {\r\n    ctx.fillRect(x, y, w, border);\r\n    ctx.fillRect(x, y + h - border, w, border);\r\n    ctx.fillRect(x, y, border, h);\r\n    ctx.fillRect(x + w - border, y, border, h);\r\n}\r\n\r\nlet time_last = 0;\r\nfunction update(time_cur: number) {\r\n    twgl.resizeCanvasToDisplaySize(canvas);\r\n\r\n    let delta = (time_cur - time_last) * 0.001;\r\n    time_last = time_cur;\r\n\r\n    ctx.fillStyle = \"#4E5E5E\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    anim_t += delta / anim_duration;\r\n    anim_t = Math.min(1.0, anim_t);\r\n\r\n    let x = 0;\r\n    let y = 0;\r\n    let w = canvas.width;\r\n    let h = canvas.height;\r\n\r\n    if (anim_turn) {\r\n        w = lerp(w * 2, w, anim_t);\r\n        // h = lerp(h * 4, h, anim_t); // style 1: vertical\r\n        h = lerp(h * 2, h, anim_t); // style 2: squares\r\n    }\r\n\r\n    // drawTiles(x, y, w, h, [], false);\r\n    // drawTilesV2(x, y, w, h, [], false);\r\n    drawTilesV3(x, y, w, h, [], false);\r\n\r\n    // cheat\r\n    // while (cur_turn < 1023) {\r\n    //     onInput(thueMorse(cur_turn));\r\n    // }\r\n\r\n    if (pending_click) {\r\n        ctx.fillStyle = \"pink\";\r\n        ctx.textAlign = \"center\";\r\n        ctx.textBaseline = \"middle\";\r\n        ctx.font = \"60px Arial\"\r\n        ctx.fillText(\"Click to start\", canvas.width / 2, canvas.height * 3 / 4)\r\n    }\r\n\r\n    loop_id = requestAnimationFrame(update);\r\n}\r\n","export function randomInt(low_inclusive: number, high_exclusive: number): number {\r\n    return low_inclusive + Math.floor(Math.random() * (high_exclusive - low_inclusive));\r\n}\r\n\r\nexport function max(arr: number[]) {\r\n    if (arr.length === 0) {\r\n        return undefined\r\n    }\r\n    return arr[argmax(arr)!];\r\n}\r\n\r\nexport function argmax(arr: number[]) {\r\n    if (arr.length === 0) {\r\n        return undefined\r\n    }\r\n    let res = 0;\r\n    let biggest = arr[0];\r\n    for (let k = 1; k < arr.length; k++) {\r\n        if (arr[k] > biggest) {\r\n            biggest = arr[k];\r\n            res = k;\r\n        }\r\n    }\r\n    return res;\r\n}\r\n\r\nexport function lerp(a: number, b: number, t: number): number {\r\n    return a * (1 - t) + b * t;\r\n}\r\n\r\nexport function towards(cur: number, target: number, max_delta: number): number {\r\n    if (cur > target) {\r\n        return Math.max(cur - max_delta, target);\r\n    } else if (cur < target) {\r\n        return Math.min(cur + max_delta, target);\r\n    } else {\r\n        return target;\r\n    }\r\n}\r\n\r\nexport function mod(n: number, m: number) {\r\n    return ((n % m) + m) % m;\r\n}\r\n\r\nexport function remap(value: number, old_a: number, old_b: number, new_a: number, new_b: number) {\r\n    let t = (value - old_a) / (old_b - old_a);\r\n    return t * (new_b - new_a) + new_a;\r\n}\r\n\r\nexport function randomChoice<T>(arr: T[]) {\r\n    if (arr.length === 0) {\r\n        throw new Error(\"can't choose out of an empty array\");\r\n    }\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function smoothstep(toZero: number, toOne: number, value: number) {\r\n    let x = Math.max(0, Math.min(1, (value - toZero) / (toOne - toZero)));\r\n    return x * x * (3 - 2 * x);\r\n};\r\n\r\nexport function clamp(value: number, min_inclusive: number, max_inclusive: number): number {\r\n    return Math.max(min_inclusive, Math.min(max_inclusive, value));\r\n}\r\n\r\nexport function inRange(value: number, min_inclusive: number, max_exclusive: number): boolean {\r\n    return value >= min_inclusive && value < max_exclusive;\r\n}\r\n\r\nexport function onBorder(value: number, min_inclusive: number, max_exclusive: number): boolean {\r\n    return value == min_inclusive || (value + 1) === max_exclusive;\r\n}\r\n\r\n// from https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nexport function shuffle<T>(array: T[]) {\r\n    let currentIndex = array.length, randomIndex;\r\n    // While there remain elements to shuffle.\r\n    while (currentIndex != 0) {\r\n        // Pick a remaining element.\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex--;\r\n        // And swap it with the current element.\r\n        [array[currentIndex], array[randomIndex]] = [\r\n            array[randomIndex], array[currentIndex]];\r\n    }\r\n    return array;\r\n}\r\n\r\n\r\n// Use objects instead of arrays: https://jsben.ch/FgKVi\r\nexport class Vec4 {\r\n    constructor(\r\n        public x: number = 0.0,\r\n        public y: number = 0.0,\r\n        public z: number = 0.0,\r\n        public w: number = 0.0,\r\n    ) { }\r\n\r\n    static fromHex(hex_str: string): Vec4 {\r\n        // from https://stackoverflow.com/a/5624139\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex_str);\r\n        if (result === null) {\r\n            throw new Error(`can't parse hex: ${hex_str}`);\r\n        }\r\n        return new Vec4(\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16),\r\n            255,\r\n        );\r\n    }\r\n\r\n    static zero = new Vec4(0, 0, 0, 0);\r\n    static one = new Vec4(1, 1, 1, 1);\r\n}\r\n\r\ntype CardinalDirection = \"xpos\" | \"xneg\" | \"ypos\" | \"yneg\";\r\n\r\nexport class Vec2 {\r\n    constructor(\r\n        public x: number = 0.0,\r\n        public y: number = 0.0,\r\n    ) { }\r\n\r\n    toString(): string {\r\n        return `Vec2(${this.x}, ${this.y})`;\r\n    }\r\n\r\n    // scratchpad vectors, meant to be reused as intermediate values without allocation\r\n    static tmp = new Vec2(0, 0);\r\n    static tmp1 = new Vec2(0, 0);\r\n    static tmp2 = new Vec2(0, 0);\r\n    static tmp3 = new Vec2(0, 0);\r\n\r\n    static zero = new Vec2(0, 0);\r\n    static one = new Vec2(1, 1);\r\n\r\n    static set(v: Vec2, x: number, y: number): Vec2 {\r\n        v.x = x;\r\n        v.y = y;\r\n        return v;\r\n    }\r\n\r\n    static copy(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = v.x;\r\n        out.y = v.y;\r\n        return out;\r\n    }\r\n\r\n    static add(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        return out;\r\n    }\r\n\r\n    static sub(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        return out;\r\n    }\r\n\r\n    static mul(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        return out;\r\n    }\r\n\r\n    static div(a: Vec2, b: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x / b.x;\r\n        out.y = a.y / b.y;\r\n        return out;\r\n    }\r\n\r\n    static round(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = Math.round(v.x);\r\n        out.y = Math.round(v.y);\r\n        return out;\r\n    }\r\n\r\n    static negate(v: Vec2, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = -v.x;\r\n        out.y = -v.y;\r\n        return out;\r\n    }\r\n\r\n    static scale(v: Vec2, s: number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = v.x * s;\r\n        out.y = v.y * s;\r\n        return out;\r\n    }\r\n\r\n    static lerp(a: Vec2, b: Vec2, t: number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = a.x * (1 - t) + b.x * t;\r\n        out.y = a.y * (1 - t) + b.y * t;\r\n        return out;\r\n    }\r\n\r\n    static inBounds(point: Vec2, bounds: Vec2): boolean {\r\n        return inRange(point.x, 0, bounds.x) && inRange(point.y, 0, bounds.y);\r\n    }\r\n\r\n    // too niche for here?\r\n    static onBorder(point: Vec2, bounds: Vec2): boolean {\r\n        return onBorder(point.x, 0, bounds.x) || onBorder(point.y, 0, bounds.y);\r\n    }\r\n\r\n    static isZero(v: Vec2): boolean {\r\n        return v.x === 0 && v.y === 0;\r\n    }\r\n\r\n    static equals(a: Vec2, b: Vec2): boolean {\r\n        return a.x === b.x && a.y === b.y;\r\n    }\r\n\r\n    static map1(v: Vec2, fn: (x: number) => number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = fn(v.x);\r\n        out.y = fn(v.y);\r\n        return out;\r\n    }\r\n\r\n    static map2(a: Vec2, b: Vec2, fn: (a: number, b: number) => number, out?: Vec2): Vec2 {\r\n        out = out || new Vec2();\r\n        out.x = fn(a.x, b.x);\r\n        out.y = fn(a.y, b.y);\r\n        return out;\r\n    }\r\n\r\n    static roundToCardinal(a: Vec2): CardinalDirection {\r\n        if (Math.abs(a.x) >= Math.abs(a.y)) {\r\n            if (a.x >= 0) {\r\n                return \"xpos\";\r\n            } else {\r\n                return \"xneg\";\r\n            }\r\n        } else {\r\n            if (a.y >= 0) {\r\n                return \"ypos\";\r\n            } else {\r\n                return \"yneg\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// todo: generalize, error check for too many args\r\nexport class Rectangle {\r\n    constructor(\r\n        public topLeft: Vec2,\r\n        public size: Vec2) { }\r\n\r\n    static fromParams(params: {\r\n        topLeft?: Vec2,\r\n        center?: Vec2,\r\n        bottomRight?: Vec2,\r\n        size?: Vec2,\r\n    }): Rectangle {\r\n        let topLeft = new Vec2();\r\n        let size = new Vec2();\r\n\r\n        if (params.topLeft !== undefined) {\r\n            Vec2.copy(params.topLeft, topLeft);\r\n            if (params.size !== undefined) {\r\n                Vec2.copy(params.size, size);\r\n            } else if (params.bottomRight !== undefined) {\r\n                Vec2.sub(params.bottomRight, topLeft, size);\r\n            } else if (params.center !== undefined) {\r\n                Vec2.sub(params.center, topLeft, size);\r\n                Vec2.scale(size, 2, size);\r\n            } else {\r\n                throw new Error(\"not enough data to compute rect\");\r\n            }\r\n            return new Rectangle(topLeft, size);\r\n        } else if (params.center !== undefined) {\r\n            if (params.size !== undefined) {\r\n                Vec2.copy(params.size, size);\r\n            } else if (params.bottomRight !== undefined) {\r\n                Vec2.sub(params.bottomRight, params.center, size);\r\n                Vec2.scale(size, 2, size);\r\n            } else {\r\n                throw new Error(\"not enough data to compute rect\");\r\n            }\r\n            Vec2.sub(params.center, Vec2.scale(size, .5), topLeft);\r\n            return new Rectangle(topLeft, size);\r\n        } else {\r\n            throw new Error(\"unimplemented\");\r\n        }\r\n    }\r\n}\r\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$6MzNI","$c15e63e86d3cb1d2$export$b973696b5f65b53b","constructor","x","y","z","w","fromHex","hex_str","result","exec","parseInt","_","zero","_1","one","$c15e63e86d3cb1d2$export$ac4bca90992eed1","toString","tmp","tmp1","_2","tmp2","_3","tmp3","_4","_5","set","v","copy","out","add","a","b","sub","mul","div","round","Math","negate","scale","s","lerp","t","inBounds","point","bounds","value","max_exclusive","$c15e63e86d3cb1d2$export$ddf89a9c5af38f94","onBorder","$c15e63e86d3cb1d2$export$66124ef7f3a58cb4","isZero","equals","map1","fn","map2","roundToCardinal","abs","$487ab72b82ca8087$var$canvas","document","querySelector","$487ab72b82ca8087$var$ctx","getContext","requestAnimationFrame","$487ab72b82ca8087$var$update","time_cur","resizeCanvasToDisplaySize","delta","$487ab72b82ca8087$var$time_last","fillStyle","fillRect","width","height","$487ab72b82ca8087$var$anim_t","min","h","$487ab72b82ca8087$var$anim_turn","$487ab72b82ca8087$var$drawTilesV3","address","flip","length","$487ab72b82ca8087$var$player_address","x1","x2","y2","concat","$487ab72b82ca8087$var$getVisiting","colors","$487ab72b82ca8087$var$colors_v2_left","$487ab72b82ca8087$var$colors_v2_right","border","$487ab72b82ca8087$var$prev_player_address","$487ab72b82ca8087$var$thickBorder","visiting","$487ab72b82ca8087$var$pending_click","textAlign","textBaseline","font","fillText","addEventListener","ev","$487ab72b82ca8087$var$onInput","pageX","innerWidth","$487ab72b82ca8087$var$cur_turn","is_left","$487ab72b82ca8087$var$thueMorse","n","res","every","d","slice","$487ab72b82ca8087$var$nextAdress","Array","fill","k","console","log","alert","player"],"version":3,"file":"index.8c435a44.js.map"}